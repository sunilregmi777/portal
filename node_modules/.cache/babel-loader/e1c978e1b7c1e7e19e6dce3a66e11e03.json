{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js\",\n    _s = $RefreshSig$();\n\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardHeader, CardBody, CardTitle, Container, Row, Col, FormGroup, Input, Label } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport _ from \"lodash/fp\";\nimport './driver.scss';\nimport { connect } from \"react-redux\";\nimport classnames from 'classnames';\nimport { addDriver } from '../../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddDriver(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm({\n    mode: 'onChange'\n  });\n  const history = useHistory();\n  const [name, setName] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [phone, setPhone] = useState(null);\n\n  const onSubmit = data => {\n    console.log('data');\n  };\n\n  useEffect(() => {}, [props.driver]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-driver\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt--5\",\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"mb-0\",\n                  children: \"Add Driver\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit(onSubmit),\n                  children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxDEV(Label, {\n                        className: \"form-control-label col-form-label\",\n                        htmlFor: \"firstname\",\n                        children: \"First Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 58,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"9\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        name: \"firstname\",\n                        className: classnames({\n                          'is-valid': !errors.firstname\n                        }, {\n                          \"is-invalid\": errors.firstname\n                        }),\n                        placeholder: \"First Name\",\n                        type: \"text\",\n                        innerRef: register({\n                          required: true,\n                          pattern: /^[A-Za-z]+[A-Za-z]/i\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 66,\n                        columnNumber: 49\n                      }, this), _.get(\"firstname.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"error-message\",\n                        children: \"This field is required\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 53\n                      }, this), _.get(\"firstname.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"error-message\",\n                        children: \"Name should be letters only\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxDEV(Label, {\n                        className: \"form-control-label col-form-label\",\n                        htmlFor: \"lastname\",\n                        children: \"Last Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"9\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        name: \"lastname\",\n                        className: \"is-invalid\",\n                        placeholder: \"Last Name\",\n                        type: \"text\",\n                        innerRef: register({\n                          required: true,\n                          pattern: /^[A-Za-z]+[A-Za-z]/i\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 49\n                      }, this), _.get(\"lastname.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"error-message\",\n                        children: \"This field is required\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 53\n                      }, this), _.get(\"lastname.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"error-message\",\n                        children: \"Name should be letters only\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxDEV(Label, {\n                        className: \"form-control-label col-form-label\",\n                        htmlFor: \"email\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"9\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        name: \"email\",\n                        placeholder: \"Email\",\n                        type: \"email\",\n                        innerRef: register({\n                          required: true,\n                          pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 49\n                      }, this), _.get(\"email.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"error-message\",\n                        children: \"This field is required\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 53\n                      }, this), _.get(\"email.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"error-message\",\n                        children: \"Invalid Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxDEV(Label, {\n                        className: \"form-control-label col-form-label\",\n                        htmlFor: \"mobile\",\n                        children: \"Mobile\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"9\",\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        name: \"mobile\",\n                        placeholder: \"Phone No\",\n                        type: \"number\",\n                        innerRef: register({\n                          required: true\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 49\n                      }, this), _.get(\"mobile.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"error-message\",\n                        children: \"This field is required\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"float-right\",\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        className: \"btn-info\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddDriver, \"9L1RYyyYgKnrxRJJh6ikuIcQ3Jk=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = AddDriver;\nexport default AddDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDriver\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js"],"names":["Breadcrumb","BreadcrumbItem","Button","Card","CardHeader","CardBody","CardTitle","Container","Row","Col","FormGroup","Input","Label","useForm","useHistory","React","useEffect","useState","_","connect","classnames","addDriver","AddDriver","props","register","handleSubmit","watch","errors","mode","history","name","setName","address","setAddress","email","setEmail","phone","setPhone","onSubmit","data","console","log","driver","firstname","required","pattern","get"],"mappings":"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","sourcesContent":["import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState} from 'react';\nimport _ from \"lodash/fp\";\nimport './driver.scss';\nimport { connect } from \"react-redux\";\nimport classnames from 'classnames';\nimport { addDriver } from '../../store/actions';\n\n\n  function AddDriver(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange'\n    });\n    const history = useHistory();\n\n    const[name, setName] = useState(null);\n    const[address, setAddress] = useState(null);\n    const[email, setEmail] = useState(null);\n    const[phone, setPhone] = useState(null);\n\n\n    const onSubmit =  data  => {\n      console.log('data');\n    }\n\n    useEffect(()=>{\n    },[props.driver])\n    return(\n        <>\n            <div className=\"add-driver\">\n                <Container className=\"mt--5\" fluid>\n                    <Row>\n                        <Col lg=\"6\">\n                            <Card>\n                                <CardHeader>\n                                    <h3 className=\"mb-0\">Add Driver</h3>\n                                </CardHeader>\n                                <CardBody>\n                                    <form onSubmit={handleSubmit(onSubmit)}>\n                                        <FormGroup className=\"row\">\n                                            <Col md=\"3\">\n                                                <Label\n                                                    className=\"form-control-label col-form-label\"\n                                                    htmlFor=\"firstname\"\n                                                >\n                                                First Name\n                                                </Label>\n                                            </Col>\n                                            <Col md=\"9\">\n                                                <Input\n                                                    name=\"firstname\"\n                                                    className={classnames({'is-valid':!errors.firstname}, {\"is-invalid\":errors.firstname})}\n                                                    placeholder=\"First Name\"\n                                                    type=\"text\"\n                                                    innerRef={register({\n                                                    required: true,\n                                                    pattern: /^[A-Za-z]+[A-Za-z]/i \n                                                    })}\n                                                />\n                                                {_.get(\"firstname.type\", errors) === \"required\" && (\n                                                    <p className=\"error-message\">This field is required</p>\n                                                )}\n                                                {_.get(\"firstname.type\", errors) === \"pattern\" && (\n                                                    <p className=\"error-message\">Name should be letters only</p>\n                                                )}\n                                            </Col>\n                                        </FormGroup>\n                                        <FormGroup className=\"row\">\n                                            <Col md=\"3\">\n                                                <Label\n                                                    className=\"form-control-label col-form-label\"\n                                                    htmlFor=\"lastname\"\n                                                >\n                                                Last Name\n                                                </Label>\n                                            </Col>\n                                            <Col md=\"9\">\n                                                <Input\n                                                    name=\"lastname\"\n                                                    className=\"is-invalid\"\n                                                    placeholder=\"Last Name\"\n                                                    type=\"text\"\n                                                    innerRef={register({\n                                                    required: true,\n                                                    pattern: /^[A-Za-z]+[A-Za-z]/i \n                                                    })}\n                                                />\n                                                {_.get(\"lastname.type\", errors) === \"required\" && (\n                                                    <p className=\"error-message\">This field is required</p>\n                                                )}\n                                                {_.get(\"lastname.type\", errors) === \"pattern\" && (\n                                                    <p className=\"error-message\">Name should be letters only</p>\n                                                )}\n                                            </Col>\n                                        </FormGroup>\n                                        <FormGroup className=\"row\">\n                                            <Col md=\"3\">\n                                                <Label\n                                                    className=\"form-control-label col-form-label\"\n                                                    htmlFor=\"email\"\n                                                >\n                                                Email\n                                                </Label>\n                                            </Col>\n                                            <Col md=\"9\">\n                                                <Input\n                                                    name=\"email\"\n                                                    placeholder=\"Email\"\n                                                    type=\"email\"\n                                                    innerRef={register({\n                                                    required: true,\n                                                    pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                                                  })}\n                                                />\n                                                {_.get(\"email.type\", errors) === \"required\" && (\n                                                    <p className=\"error-message\">This field is required</p>\n                                                )}\n                                                {_.get(\"email.type\", errors) === \"pattern\" && (\n                                                    <p className=\"error-message\">Invalid Email</p>\n                                                )}\n                                            </Col>\n                                        </FormGroup>\n                                        <FormGroup className=\"row\">\n                                            <Col md=\"3\">\n                                                <Label\n                                                    className=\"form-control-label col-form-label\"\n                                                    htmlFor=\"mobile\"\n                                                >\n                                                Mobile\n                                                </Label>\n                                            </Col>\n                                            <Col md=\"9\">\n                                                <Input\n                                                    name=\"mobile\"\n                                                    placeholder=\"Phone No\"\n                                                    type=\"number\"\n                                                    innerRef={register({\n                                                        required: true,\n                                                    })}\n                                                />\n                                               {_.get(\"mobile.type\", errors) === \"required\" && (\n                                                    <p className=\"error-message\">This field is required</p>\n                                                )}\n                                            </Col>\n                                        </FormGroup>\n                                        <Row className=\"float-right\">\n                                            <Col>\n                                                <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                            </Col>\n                                        </Row>\n                                    </form>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default AddDriver;"]},"metadata":{},"sourceType":"module"}