{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/components/sidebar/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport classnames from \"classnames\";\nimport { Collapse, Navbar, NavbarBrand, NavItem, NavLink, Nav } from 'reactstrap';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(props) {\n  _s();\n\n  const {\n    routes,\n    logo\n  } = props;\n  const [routeCollapse, setRouteCollapse] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    setCollapseState();\n  }, []);\n\n  const setCollapseState = () => {\n    let initialRoutes = [];\n    routes.forEach(route => {\n      if (route.collapse) {\n        initialRoutes[route.state] = false;\n      }\n    });\n    setRouteCollapse(initialRoutes);\n  };\n\n  const toggleCollapse = stateName => {\n    let collapseArr = Object.assign([], routeCollapse);\n    collapseArr[stateName] = !collapseArr[stateName];\n    setRouteCollapse(collapseArr);\n  };\n\n  const activeRoute = routeName => {\n    return location.pathname.indexOf(routeName) > -1 ? 'active' : '';\n  };\n\n  const createLinks = routes => {\n    return routes.map((route, key) => {\n      if (route.redirect) return null;\n\n      if (route.collapse) {\n        return /*#__PURE__*/_jsxDEV(NavItem, {\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            \"data-toggle\": \"collapse\",\n            \"aria-expanded\": routeCollapse[route.state],\n            className: classnames({// active: activeRoute(route.views)\n            }),\n            onClick: e => {\n              console.log(route.icon);\n              e.preventDefault();\n              toggleCollapse(route.state);\n            },\n            children: route.icon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: route.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"nav-link-text\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: routeCollapse[route.state],\n            children: /*#__PURE__*/_jsxDEV(Nav, {\n              className: \"nav-sm flex-column\",\n              children: createLinks(route.views)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(NavItem, {\n        className: activeRoute(route.layout + route.path),\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: route.layout + route.path,\n          activeClassName: \"\",\n          tag: NavLinkRRD,\n          children: route.icon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: route.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"nav-link-text\",\n              children: route.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  let navbarBrandProps;\n\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\"\n    };\n  }\n\n  const scrollBarInnder = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrollbar-inner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidenav-header d-flex align-items-center\",\n      children: [logo ? /*#__PURE__*/_jsxDEV(NavbarBrand, { ...navbarBrandProps,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: logo.imgAlt,\n          className: \"navbar-brand-img\",\n          src: logo.imgSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidenav-toggler d-none d-xl-block\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidenav-toggler-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"sidenav-toggler-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"sidenav-toggler-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"sidenav-toggler-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-inner\",\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        navbar: true,\n        isOpen: true,\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          navbar: true,\n          children: createLinks(routes)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n\n  const onMouseEnterSidenav = () => {\n    if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\n      document.body.classList.add(\"g-sidenav-show\");\n    }\n  };\n\n  const onMouseLeaveSidenav = () => {\n    if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\n      document.body.classList.remove(\"g-sidenav-show\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    className: \"sidenav navbar-vertical navbar-expand-xs navbar-light bg-white\",\n    onMouseEnter: onMouseEnterSidenav,\n    onMouseLeave: onMouseLeaveSidenav,\n    children: navigator.platform.indexOf(\"Win\") > -1 ? /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      children: scrollBarInnder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }, this) : scrollBarInnder\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sidebar, \"McBwP3bWSZYGcuBgsKS/TA1H340=\", false, function () {\n  return [useLocation];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/components/sidebar/Sidebar.js"],"names":["useEffect","useState","NavLink","NavLinkRRD","Link","PerfectScrollbar","classnames","Collapse","Navbar","NavbarBrand","NavItem","Nav","useLocation","Sidebar","props","routes","logo","routeCollapse","setRouteCollapse","location","setCollapseState","initialRoutes","forEach","route","collapse","state","toggleCollapse","stateName","collapseArr","Object","assign","activeRoute","routeName","pathname","indexOf","createLinks","map","key","redirect","e","console","log","icon","preventDefault","name","views","layout","path","navbarBrandProps","innerLink","to","tag","outterLink","href","target","scrollBarInnder","imgAlt","imgSrc","onMouseEnterSidenav","document","body","classList","contains","add","onMouseLeaveSidenav","remove","navigator","platform"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport classnames from \"classnames\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    Nav\n} from 'reactstrap';\n\nimport { useLocation } from 'react-router-dom'\n\n\nfunction Sidebar(props) {\n\n    const { routes, logo } = props;\n    const [routeCollapse, setRouteCollapse] = useState([]);\n    const location = useLocation();\n\n    useEffect(() => {\n        setCollapseState();\n    }, [])\n\n    const setCollapseState = () => {\n\n        let initialRoutes = [];\n        routes.forEach(route => {\n            if (route.collapse) {\n                initialRoutes[route.state] = false;\n            }\n        });\n        setRouteCollapse(initialRoutes);\n    }\n\n    const toggleCollapse = (stateName) => {\n        let collapseArr = Object.assign([], routeCollapse);\n        collapseArr[stateName] = !collapseArr[stateName];\n        setRouteCollapse(collapseArr);\n    }\n\n\n    const activeRoute = routeName => {\n        return location.pathname.indexOf(routeName) > -1\n            ? 'active' : '';\n    };\n\n    const createLinks = routes => {\n        return routes.map((route, key) => {\n            if (route.redirect) return null;\n            if (route.collapse) {\n                return (\n                    <NavItem key={key}>\n                        <NavLink\n                            data-toggle=\"collapse\"\n                            aria-expanded={routeCollapse[route.state]}\n                            className={classnames({\n                                // active: activeRoute(route.views)\n                            })}\n                            onClick={e => {\n                                console.log(route.icon);\n                                e.preventDefault();\n                                toggleCollapse(route.state)\n                            }}>\n                            {route.icon ? (\n                                <>\n                                    <i className={route.icon} />\n                                    <span className=\"nav-link-text\">{route.name}</span>\n                                </>\n                            ) : null}\n                        </NavLink>\n                        <Collapse isOpen={routeCollapse[route.state]}>\n                            <Nav className=\"nav-sm flex-column\">\n                                {createLinks(route.views)}\n                            </Nav>\n                        </Collapse>\n                    </NavItem>\n                )\n            }\n            return (<NavItem\n                className={activeRoute(route.layout + route.path)}\n                key={key}>\n                <NavLink to={route.layout + route.path}\n                    activeClassName=\"\"\n                    tag={NavLinkRRD}>\n                    {route.icon ? (\n                        <>\n                            <i className={route.icon} />\n                            <span className=\"nav-link-text\">{route.name}</span>\n                        </>\n                    ) : null}\n                </NavLink>\n            </NavItem>);\n        });\n    }\n\n\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n        navbarBrandProps = {\n            to: logo.innerLink,\n            tag: Link\n        };\n    } else if (logo && logo.outterLink) {\n        navbarBrandProps = {\n            href: logo.outterLink,\n            target: \"_blank\"\n        };\n    }\n\n    const scrollBarInnder = (\n        <div className=\"scrollbar-inner\">\n            <div className=\"sidenav-header d-flex align-items-center\">\n                {logo ? (\n                    <NavbarBrand {...navbarBrandProps}>\n                        <img\n                            alt={logo.imgAlt}\n                            className=\"navbar-brand-img\"\n                            src={logo.imgSrc}\n                        />\n                    </NavbarBrand>\n                ) : null}\n                <div className=\"ml-auto\">\n                    <div className=\"sidenav-toggler d-none d-xl-block\">\n                        <div className=\"sidenav-toggler-inner\">\n                            <i className=\"sidenav-toggler-line\" />\n                            <i className=\"sidenav-toggler-line\" />\n                            <i className=\"sidenav-toggler-line\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"navbar-inner\">\n                <Collapse navbar isOpen={true}>\n                    <Nav navbar>{createLinks(routes)}</Nav>\n                </Collapse>\n            </div>\n        </div>\n    );\n\n\n    const onMouseEnterSidenav = () => {\n        if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\n            document.body.classList.add(\"g-sidenav-show\");\n        }\n    };\n    const onMouseLeaveSidenav = () => {\n        if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\n            document.body.classList.remove(\"g-sidenav-show\");\n        }\n    };\n    return (\n        <Navbar\n            className=\n            \"sidenav navbar-vertical navbar-expand-xs navbar-light bg-white\"\n            onMouseEnter={onMouseEnterSidenav}\n            onMouseLeave={onMouseLeaveSidenav} >\n            {\n                navigator.platform.indexOf(\"Win\") > -1 ? (\n                    <PerfectScrollbar>{scrollBarInnder}</PerfectScrollbar>\n                ) : (\n                    scrollBarInnder\n                )\n            }\n        </Navbar>\n    )\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}