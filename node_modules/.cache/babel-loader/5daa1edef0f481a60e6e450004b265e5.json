{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js\",\n    _s = $RefreshSig$();\n\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardHeader, CardBody, CardTitle, Container, Row, Col, FormGroup, Input } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport _ from \"lodash/fp\";\nimport './driver.scss';\nimport { connect } from \"react-redux\";\nimport { addDriver } from '../../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddDriver(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const history = useHistory();\n  const [name, setName] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [phone, setPhone] = useState(null);\n\n  const onSubmit = data => {\n    props.addDriver(data, history);\n  };\n\n  useEffect(() => {}, [props.driver]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-driver\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt--5\",\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"mb-0\",\n                  children: \"Add Driver\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit(onSubmit),\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"firstname\",\n                          children: \"Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 55,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          id: \"name\",\n                          name: \"name\",\n                          placeholder: \"Name\",\n                          type: \"text\",\n                          innerRef: register({\n                            required: true,\n                            pattern: /^[A-Za-z]+[A-Za-z]/i\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 61,\n                          columnNumber: 43\n                        }, this), _.get(\"name.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"error-message\",\n                          children: \"This field is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 72,\n                          columnNumber: 47\n                        }, this), _.get(\"name.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"error-message\",\n                          children: \"Name should be letters only\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 75,\n                          columnNumber: 47\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 54,\n                        columnNumber: 39\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"email\",\n                          children: \"Email\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 81,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"email\",\n                          placeholder: \"Email\",\n                          type: \"email\",\n                          innerRef: register({\n                            required: true,\n                            pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 87,\n                          columnNumber: 43\n                        }, this), _.get(\"email.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"error-message\",\n                          children: \"This field is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 47\n                        }, this), _.get(\"email.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"error-message\",\n                          children: \"Invalid Email\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 100,\n                          columnNumber: 46\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 39\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"lastname\",\n                          children: \"Address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"address\",\n                          placeholder: \"Address\",\n                          type: \"text\",\n                          innerRef: register({\n                            required: true\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 112,\n                          columnNumber: 43\n                        }, this), _.get(\"address.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"error-message\",\n                          children: \"This field is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 121,\n                          columnNumber: 47\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 39\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"lastname\",\n                          children: \"Phone\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 130,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"phone\",\n                          placeholder: \"Phone No\",\n                          type: \"number\",\n                          innerRef: register({\n                            required: true\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 136,\n                          columnNumber: 43\n                        }, this), _.get(\"phone.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"error-message\",\n                          children: \"This field is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 145,\n                          columnNumber: 47\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 39\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        className: \"btn-info\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 39\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddDriver, \"9L1RYyyYgKnrxRJJh6ikuIcQ3Jk=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = AddDriver;\nexport default AddDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDriver\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js"],"names":["Breadcrumb","BreadcrumbItem","Button","Card","CardHeader","CardBody","CardTitle","Container","Row","Col","FormGroup","Input","useForm","useHistory","React","useEffect","useState","_","connect","addDriver","AddDriver","props","register","handleSubmit","watch","errors","history","name","setName","address","setAddress","email","setEmail","phone","setPhone","onSubmit","data","driver","required","pattern","get"],"mappings":"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","sourcesContent":["import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState} from 'react';\nimport _ from \"lodash/fp\";\nimport './driver.scss';\nimport { connect } from \"react-redux\";\nimport { addDriver } from '../../store/actions';\n\n\n  function AddDriver(props){\n    const { register, handleSubmit, watch, errors } = useForm();\n    const history = useHistory();\n\n    const[name, setName] = useState(null);\n    const[address, setAddress] = useState(null);\n    const[email, setEmail] = useState(null);\n    const[phone, setPhone] = useState(null);\n\n\n    const onSubmit =  data  => {\n      props.addDriver(data, history)\n    }\n\n    useEffect(()=>{\n    },[props.driver])\n    return(\n        <>\n          <div className=\"add-driver\">\n              <Container className=\"mt--5\" fluid>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"mb-4\">\n                    <CardHeader>\n                      <h3 className=\"mb-0\">Add Driver</h3>\n                    </CardHeader>\n                      <CardBody>\n                          <form onSubmit={handleSubmit(onSubmit)}>\n                              <Row>\n                                  <Col md=\"4\">\n                                      <FormGroup>\n                                          <label\n                                            className=\"form-control-label\"\n                                            htmlFor=\"firstname\"\n                                          >\n                                          Name\n                                          </label>\n                                          <Input\n                                            id=\"name\"\n                                            name=\"name\"\n                                            placeholder=\"Name\"\n                                            type=\"text\"\n                                            innerRef={register({\n                                                required: true,\n                                                pattern: /^[A-Za-z]+[A-Za-z]/i \n                                              })}\n                                          />\n                                          {_.get(\"name.type\", errors) === \"required\" && (\n                                              <p className=\"error-message\">This field is required</p>\n                                          )}\n                                          {_.get(\"name.type\", errors) === \"pattern\" && (\n                                              <p className=\"error-message\">Name should be letters only</p>\n                                          )}\n                                      </FormGroup>\n                                  </Col>\n                                  <Col md=\"4\">\n                                      <FormGroup>\n                                          <label\n                                            className=\"form-control-label\"\n                                            htmlFor=\"email\"\n                                          >\n                                          Email\n                                          </label>\n                                          <Input\n                                            name=\"email\"\n                                            placeholder=\"Email\"\n                                            type=\"email\"\n                                            innerRef={register({\n                                            required: true,\n                                            pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                                          })}\n                                          />\n                                          {_.get(\"email.type\", errors) === \"required\" && (\n                                              <p className=\"error-message\">This field is required</p>\n                                          )}\n                                          {_.get(\"email.type\", errors) === \"pattern\" && (\n                                             <p className=\"error-message\">Invalid Email</p>\n                                          )}\n                                      </FormGroup>\n                                  </Col>\n                                  <Col md=\"4\">\n                                      <FormGroup>\n                                          <label\n                                            className=\"form-control-label\"\n                                            htmlFor=\"lastname\"\n                                          >\n                                          Address\n                                          </label>\n                                          <Input\n                                            name=\"address\"\n                                            placeholder=\"Address\"\n                                            type=\"text\"\n                                            innerRef={register({\n                                                required: true,\n                                              })}\n                                          />\n                                           {_.get(\"address.type\", errors) === \"required\" && (\n                                              <p className=\"error-message\">This field is required</p>\n                                          )}\n                                      </FormGroup>\n                                  </Col>\n                              </Row>\n                              <Row>\n                                 \n                                  <Col md=\"4\">\n                                      <FormGroup>\n                                          <label\n                                            className=\"form-control-label\"\n                                            htmlFor=\"lastname\"\n                                          >\n                                          Phone\n                                          </label>\n                                          <Input\n                                            name=\"phone\"\n                                            placeholder=\"Phone No\"\n                                            type=\"number\"\n                                            innerRef={register({\n                                                required: true,\n                                              })}\n                                          />\n                                           {_.get(\"phone.type\", errors) === \"required\" && (\n                                              <p className=\"error-message\">This field is required</p>\n                                          )}\n                                      </FormGroup>\n                                  </Col>\n                              </Row>\n                              <Row>\n                                  <Col>\n                                      <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                  </Col>\n                              </Row>\n                          </form>\n                      </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n              </Container>\n          </div>\n        </>\n    );\n}\n\nexport default AddDriver;"]},"metadata":{},"sourceType":"module"}