{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/components/alerts/AlertBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Alert } from 'reactstrap';\nimport * as alertMessage from './AlertMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AlertBox(props) {\n  _s();\n\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState({});\n\n  const close = () => {\n    setAlert(!alert);\n    props.onClose();\n  };\n\n  let color = null;\n  let strong = null;\n\n  switch (props.alert.type) {\n    case alert.SUCCESS:\n      color = \"success\";\n      strong = \"Well done!\";\n      break;\n\n    case alert.ERROR:\n      color = \"danger\";\n      strong = \"Oh Snap!\";\n      break;\n\n    case alert.INFO:\n      color = \"info\";\n      strong = \"Heads Up!\";\n      break;\n\n    case alert.WARNING:\n      color = \"warning\";\n      strong = \"Warning!\";\n      break;\n  }\n\n  if (!color || !strong) return null;\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    color: color,\n    className: `bg-${color} text-white`,\n    isOpen: alert,\n    toggle: () => close(),\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: strong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), \" \", props.alert.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AlertBox, \"+MGjY5LKw5oHRhxPXA9tOrVFXFw=\");\n\n_c = AlertBox;\nexport default AlertBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertBox\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/components/alerts/AlertBox.js"],"names":["React","useState","Alert","alertMessage","AlertBox","props","alert","setAlert","message","setMessage","close","onClose","color","strong","type","SUCCESS","ERROR","INFO","WARNING"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAqB,YAArB;AACA,OAAO,KAAKC,YAAZ,MAA8B,iBAA9B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACvB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMS,KAAK,GAAC,MAAI;AACfH,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAD,IAAAA,KAAK,CAACM,OAAN;AACE,GAHH;;AAKA,MAAIC,KAAK,GAAG,IAAZ;AACG,MAAIC,MAAM,GAAG,IAAb;;AACA,UAAQR,KAAK,CAACC,KAAN,CAAYQ,IAApB;AACI,SAAKR,KAAK,CAACS,OAAX;AACIH,MAAAA,KAAK,GAAG,SAAR;AACAC,MAAAA,MAAM,GAAG,YAAT;AACF;;AACF,SAAKP,KAAK,CAACU,KAAX;AACIJ,MAAAA,KAAK,GAAG,QAAR;AACAC,MAAAA,MAAM,GAAG,UAAT;AACF;;AACF,SAAKP,KAAK,CAACW,IAAX;AACIL,MAAAA,KAAK,GAAG,MAAR;AACAC,MAAAA,MAAM,GAAG,WAAT;AACF;;AACF,SAAKP,KAAK,CAACY,OAAX;AACIN,MAAAA,KAAK,GAAG,SAAR;AACAC,MAAAA,MAAM,GAAG,UAAT;AACF;AAhBN;;AAkBA,MAAG,CAACD,KAAD,IAAU,CAACC,MAAd,EAAsB,OAAO,IAAP;AAEzB,sBACO,QAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAqB,IAAA,SAAS,EAAG,MAAKA,KAAM,aAA5C;AAA0D,IAAA,MAAM,EAAEN,KAAlE;AAAyE,IAAA,MAAM,EAAE,MAAMI,KAAK,EAA5F;AAAA,4BACI;AAAA,gBAASG;AAAT;AAAA;AAAA;AAAA;AAAA,YADJ,OAC+BR,KAAK,CAACC,KAAN,CAAYE,OAD3C;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAMA;;GApCQJ,Q;;KAAAA,Q;AAsCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Alert} from 'reactstrap';\nimport * as alertMessage from './AlertMessages';\n\nfunction AlertBox(props){\n\tconst[alert, setAlert] = useState(false)\n\tconst [message, setMessage] = useState({});\n\tconst close=()=>{\n\t\tsetAlert(!alert);\n\t\tprops.onClose();\n\t  }\n\n\tlet color = null;\n    let strong = null;\n    switch (props.alert.type) {\n        case alert.SUCCESS:\n            color = \"success\";\n            strong = \"Well done!\"\n          break;\n        case alert.ERROR:\n            color = \"danger\";\n            strong = \"Oh Snap!\"\n          break;\n        case alert.INFO:\n            color = \"info\";\n            strong = \"Heads Up!\"\n          break;\n        case alert.WARNING:\n            color = \"warning\";\n            strong = \"Warning!\"\n          break;\n      }\n    if(!color || !strong) return null;\n\n\treturn (\n        <Alert color={color} className={`bg-${color} text-white`} isOpen={alert} toggle={() => close()}>\n            <strong>{strong}</strong> {props.alert.message}\n        </Alert>\n    );\n\n}\n\nexport default AlertBox;"]},"metadata":{},"sourceType":"module"}