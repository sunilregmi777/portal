{"ast":null,"code":"import { ADD_DRIVER, ADD_DRIVER_SUCCESSFUL, ADD_DRIVER_FAILED, FETCH_DRIVER, FETCH_DRIVER_SUCCESSFUL, DELETE_DRIVER_SUCCESSFUL, FETCH_DRIVER_FAILED, DELETE_DRIVER, UPDATE_DRIVER, UPDATE_DRIVER_SUCCESSFUL } from \"./actionTypes\";\nconst initialState = {\n  loading: null,\n  errorMessage: null,\n  drivers: null,\n  editMode: false\n};\n\nconst driver = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_DRIVER:\n      state = { ...state,\n        loading: true,\n        isAuthenticated: true\n      };\n      break;\n\n    case ADD_DRIVER_SUCCESSFUL:\n      state = { ...state,\n        loading: false,\n        errorMessage: null // drivers:action.data\n\n      };\n      break;\n\n    case ADD_DRIVER_FAILED:\n      state = { ...state,\n        loading: false,\n        errorMessage: null\n      };\n      break;\n\n    case FETCH_DRIVER:\n      state = { ...state,\n        loading: true,\n        errorMessage: null\n      };\n      break;\n\n    case FETCH_DRIVER_SUCCESSFUL:\n      state = { ...state,\n        loading: false,\n        errorMessage: null,\n        drivers: action.data\n      };\n      break;\n\n    case FETCH_DRIVER_FAILED:\n      state = { ...state,\n        loading: false,\n        errorMessage: null\n      };\n      break;\n\n    case DELETE_DRIVER_SUCCESSFUL:\n      state = {\n        loading: false,\n        errorMessage: null,\n        drivers: action.payload.drivers.filter(item => item.id != action.payload.id)\n      };\n      break;\n\n    case DELETE_DRIVER:\n      state = { ...state,\n        loading: false,\n        errorMessage: null,\n        drivers: action.data\n      };\n      break;\n\n    case UPDATE_DRIVER:\n      state = { ...state,\n        loading: false,\n        errorMessage: null,\n        drivers: action.data\n      };\n      break;\n\n    case UPDATE_DRIVER_SUCCESSFUL:\n      state = {\n        loading: false,\n        errorMessage: null,\n        drivers: action.payload.drivers.filter(item => item.id != action.payload.id)\n      };\n      break;\n\n    default:\n      state = { ...state\n      };\n      break;\n  }\n\n  return state;\n};\n\nexport default driver;","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/store/driver/reducer.js"],"names":["ADD_DRIVER","ADD_DRIVER_SUCCESSFUL","ADD_DRIVER_FAILED","FETCH_DRIVER","FETCH_DRIVER_SUCCESSFUL","DELETE_DRIVER_SUCCESSFUL","FETCH_DRIVER_FAILED","DELETE_DRIVER","UPDATE_DRIVER","UPDATE_DRIVER_SUCCESSFUL","initialState","loading","errorMessage","drivers","editMode","driver","state","action","type","isAuthenticated","data","payload","filter","item","id"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,qBAArB,EAA4CC,iBAA5C,EAA+DC,YAA/D,EAA6EC,uBAA7E,EAAsGC,wBAAtG,EACIC,mBADJ,EACyBC,aADzB,EACwCC,aADxC,EACuDC,wBADvD,QACuF,eADvF;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AACFC,EAAAA,YAAY,EAAE,IADZ;AACkBC,EAAAA,OAAO,EAAC,IAD1B;AACgCC,EAAAA,QAAQ,EAAC;AADzC,CAArB;;AAIA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,UAAL;AACIgB,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJL,QAAAA,OAAO,EAAC,IAFJ;AAGJQ,QAAAA,eAAe,EAAE;AAHb,OAAR;AAKA;;AACJ,SAAKlB,qBAAL;AACIe,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJL,QAAAA,OAAO,EAAE,KAFL;AAGJC,QAAAA,YAAY,EAAE,IAHV,CAIJ;;AAJI,OAAR;AAMA;;AACJ,SAAKV,iBAAL;AACIc,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJL,QAAAA,OAAO,EAAE,KAFL;AAGJC,QAAAA,YAAY,EAAE;AAHV,OAAR;AAKA;;AACJ,SAAKT,YAAL;AACIa,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJL,QAAAA,OAAO,EAAE,IAFL;AAGJC,QAAAA,YAAY,EAAE;AAHV,OAAR;AAKA;;AACJ,SAAKR,uBAAL;AACIY,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJL,QAAAA,OAAO,EAAE,KAFL;AAGJC,QAAAA,YAAY,EAAE,IAHV;AAIJC,QAAAA,OAAO,EAACI,MAAM,CAACG;AAJX,OAAR;AAMA;;AACJ,SAAKd,mBAAL;AACIU,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJL,QAAAA,OAAO,EAAE,KAFL;AAGJC,QAAAA,YAAY,EAAE;AAHV,OAAR;AAKA;;AACJ,SAAKP,wBAAL;AACIW,MAAAA,KAAK,GAAG;AACJL,QAAAA,OAAO,EAAE,KADL;AAEJC,QAAAA,YAAY,EAAE,IAFV;AAGJC,QAAAA,OAAO,EAAEI,MAAM,CAACI,OAAP,CAAeR,OAAf,CAAuBS,MAAvB,CAA+BC,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWP,MAAM,CAACI,OAAP,CAAeG,EAAlE;AAHL,OAAR;AAKA;;AACJ,SAAKjB,aAAL;AACIS,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJL,QAAAA,OAAO,EAAE,KAFL;AAGJC,QAAAA,YAAY,EAAE,IAHV;AAIJC,QAAAA,OAAO,EAACI,MAAM,CAACG;AAJX,OAAR;AAMA;;AAEJ,SAAKZ,aAAL;AACIQ,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJL,QAAAA,OAAO,EAAE,KAFL;AAGJC,QAAAA,YAAY,EAAE,IAHV;AAIJC,QAAAA,OAAO,EAACI,MAAM,CAACG;AAJX,OAAR;AAMA;;AACJ,SAAKX,wBAAL;AACIO,MAAAA,KAAK,GAAG;AACJL,QAAAA,OAAO,EAAE,KADL;AAEJC,QAAAA,YAAY,EAAE,IAFV;AAGJC,QAAAA,OAAO,EAAEI,MAAM,CAACI,OAAP,CAAeR,OAAf,CAAuBS,MAAvB,CAA+BC,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWP,MAAM,CAACI,OAAP,CAAeG,EAAlE;AAHL,OAAR;AAKA;;AACJ;AACIR,MAAAA,KAAK,GAAG,EAAE,GAAGA;AAAL,OAAR;AACA;AA9ER;;AAgFA,SAAOA,KAAP;AACH,CAlFD;;AAmFA,eAAeD,MAAf","sourcesContent":["import { ADD_DRIVER, ADD_DRIVER_SUCCESSFUL, ADD_DRIVER_FAILED, FETCH_DRIVER, FETCH_DRIVER_SUCCESSFUL, DELETE_DRIVER_SUCCESSFUL,\n    FETCH_DRIVER_FAILED, DELETE_DRIVER, UPDATE_DRIVER, UPDATE_DRIVER_SUCCESSFUL } from \"./actionTypes\";\n\nconst initialState = {\n    loading: null, errorMessage: null, drivers:null, editMode:false\n}\n\nconst driver = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_DRIVER:\n            state = {\n                ...state,\n                loading:true,\n                isAuthenticated: true,\n            }\n            break;\n        case ADD_DRIVER_SUCCESSFUL:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                // drivers:action.data\n            }\n            break;\n        case ADD_DRIVER_FAILED:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null\n            }\n            break;\n        case FETCH_DRIVER:\n            state = {\n                ...state,\n                loading: true,\n                errorMessage: null\n            }\n            break;\n        case FETCH_DRIVER_SUCCESSFUL:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                drivers:action.data\n            }\n            break;\n        case FETCH_DRIVER_FAILED:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null\n            }\n            break;\n        case DELETE_DRIVER_SUCCESSFUL:\n            state = {\n                loading: false,\n                errorMessage: null,\n                drivers: action.payload.drivers.filter((item) => item.id != action.payload.id)\n            }\n            break;\n        case DELETE_DRIVER:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                drivers:action.data\n            }\n            break;\n        \n        case UPDATE_DRIVER:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                drivers:action.data\n            }\n            break;\n        case UPDATE_DRIVER_SUCCESSFUL:\n            state = {\n                loading: false,\n                errorMessage: null,\n                drivers: action.payload.drivers.filter((item) => item.id != action.payload.id)\n            }\n            break;\n        default:\n            state = { ...state };\n            break;\n    }\n    return state;\n}\nexport default driver;"]},"metadata":{},"sourceType":"module"}