{"ast":null,"code":"import { fork, put, all, call, takeEvery } from 'redux-saga/effects';\nimport { ADD_DRIVER, ADD_DRIVER_SUCCESSFUL, ADD_DRIVER_FAILED, FETCH_DRIVER, FETCH_DRIVER_SUCCESSFUL, FETCH_DRIVER_FAILED } from \"../actions\";\nimport API from '../../helpers/api';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nfunction* addDriver({\n  payload,\n  history\n}) {\n  try {\n    const data = yield call(API, \"drivers\", \"post\", payload);\n    console.log(history); // yield put(addDriverSuccessful(data));\n\n    history.push('/driver-list');\n  } catch (error) {\n    yield put(addDriverFailed(error));\n  }\n}\n\nexport function* watchAddDriver() {\n  yield takeEvery(ADD_DRIVER, addDriver);\n}\nexport function* addDriverSaga() {\n  yield all([fork(watchAddDriver)]);\n}\nexport function* watchAddDriverSuccessful() {\n  yield takeEvery(ADD_DRIVER_SUCCESSFUL, addDriver);\n}\n\nfunction* fetchDriver() {\n  try {\n    const data = yield call(API, \"drivers\", \"get\");\n    yield put(fetchDriverSuccessful(data));\n  } catch (error) {\n    console.log(error);\n    yield put(fetchDriverFailed(error));\n  }\n} // function getDriver(){\n//     return\n//         axios\n//         .get(`${baseUrl}/drivers` )\n//         .then((response) =>{\n//             console.log(\"test\")\n//             console.log(response)\n//             if(response.status >= 200 && response.status <=299){\n//                 console.log(response.data)\n//                 return {data:response.data}\n//             }\n//         })\n// }\n\n\nexport function* watchFetchDriver() {\n  yield takeEvery(FETCH_DRIVER, fetchDriver);\n}\nexport function* fetchDriverSaga() {\n  yield all([fork(watchFetchDriver)]);\n}","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/store/driver/saga.js"],"names":["fork","put","all","call","takeEvery","ADD_DRIVER","ADD_DRIVER_SUCCESSFUL","ADD_DRIVER_FAILED","FETCH_DRIVER","FETCH_DRIVER_SUCCESSFUL","FETCH_DRIVER_FAILED","API","axios","useHistory","addDriver","payload","history","data","console","log","push","error","addDriverFailed","watchAddDriver","addDriverSaga","watchAddDriverSuccessful","fetchDriver","fetchDriverSuccessful","fetchDriverFailed","watchFetchDriver","fetchDriverSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,SAA/B,QAAgD,oBAAhD;AAEA,SAASC,UAAT,EAAqBC,qBAArB,EAA4CC,iBAA5C,EAA+DC,YAA/D,EAA6EC,uBAA7E,EAAsGC,mBAAtG,QAAkI,YAAlI;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAApB,EAA0C;AACtC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMd,IAAI,CAACQ,GAAD,EAAM,SAAN,EAAiB,MAAjB,EAAyBI,OAAzB,CAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAFA,CAGI;;AACAA,IAAAA,OAAO,CAACI,IAAR,CAAa,cAAb;AACH,GALL,CAMA,OAAOC,KAAP,EAAc;AACV,UAAMpB,GAAG,CAACqB,eAAe,CAACD,KAAD,CAAhB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUE,cAAV,GAA2B;AAC9B,QAAMnB,SAAS,CAACC,UAAD,EAAaS,SAAb,CAAf;AACH;AAED,OAAO,UAAUU,aAAV,GAA0B;AAC7B,QAAMtB,GAAG,CAAC,CAACF,IAAI,CAACuB,cAAD,CAAL,CAAD,CAAT;AACH;AAED,OAAO,UAAUE,wBAAV,GAAqC;AACxC,QAAMrB,SAAS,CAACE,qBAAD,EAAwBQ,SAAxB,CAAf;AACH;;AAED,UAAUY,WAAV,GAAwB;AACpB,MAAI;AACA,UAAMT,IAAI,GAAG,MAAMd,IAAI,CAACQ,GAAD,EAAM,SAAN,EAAiB,KAAjB,CAAvB;AACI,UAAMV,GAAG,CAAC0B,qBAAqB,CAACV,IAAD,CAAtB,CAAT;AACP,GAHD,CAIA,OAAOI,KAAP,EAAc;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,UAAMpB,GAAG,CAAC2B,iBAAiB,CAACP,KAAD,CAAlB,CAAT;AACH;AACJ,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,UAAUQ,gBAAV,GAA6B;AAChC,QAAMzB,SAAS,CAACI,YAAD,EAAekB,WAAf,CAAf;AACH;AAED,OAAO,UAAUI,eAAV,GAA4B;AAC/B,QAAM5B,GAAG,CAAC,CAACF,IAAI,CAAC6B,gBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { fork, put, all, call, takeEvery } from 'redux-saga/effects'\n\nimport { ADD_DRIVER, ADD_DRIVER_SUCCESSFUL, ADD_DRIVER_FAILED, FETCH_DRIVER, FETCH_DRIVER_SUCCESSFUL, FETCH_DRIVER_FAILED  } from \"../actions\";\n\nimport API from '../../helpers/api';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction* addDriver({ payload, history }) {\n    try {\n        const data = yield call(API, \"drivers\", \"post\", payload);\n        console.log(history)\n            // yield put(addDriverSuccessful(data));\n            history.push('/driver-list');\n        }\n    catch (error) {\n        yield put(addDriverFailed(error));\n    }\n}\n\nexport function* watchAddDriver() {\n    yield takeEvery(ADD_DRIVER, addDriver);\n}\n\nexport function* addDriverSaga() {\n    yield all([fork(watchAddDriver)]);\n}\n\nexport function* watchAddDriverSuccessful() {\n    yield takeEvery(ADD_DRIVER_SUCCESSFUL, addDriver);\n}\n\nfunction* fetchDriver() {\n    try {\n        const data = yield call(API, \"drivers\", \"get\");\n            yield put(fetchDriverSuccessful(data));\n    }\n    catch (error) {\n        console.log(error)\n        yield put(fetchDriverFailed(error));\n    }\n}\n\n// function getDriver(){\n//     return\n//         axios\n//         .get(`${baseUrl}/drivers` )\n//         .then((response) =>{\n//             console.log(\"test\")\n//             console.log(response)\n//             if(response.status >= 200 && response.status <=299){\n//                 console.log(response.data)\n//                 return {data:response.data}\n//             }\n//         })\n    \n// }\nexport function* watchFetchDriver() {\n    yield takeEvery(FETCH_DRIVER, fetchDriver);\n}\n\nexport function* fetchDriverSaga() {\n    yield all([fork(watchFetchDriver)]);\n}\n"]},"metadata":{},"sourceType":"module"}