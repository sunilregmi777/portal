{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/driver/DriverList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { Row, Col, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardHeader, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './driver.scss';\nimport { connect } from \"react-redux\";\nimport { fetchDriver, deleteDriver, updateDriver } from '../../store/actions';\nimport AddDriver from './AddDriver';\nimport API from \"../../helpers/api\";\nimport AlertBox from '../../components/alerts/AlertBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DriverList(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [drivers, setDrivers] = useState([]);\n  const [driver, setDriver] = useState([]);\n  const [message, setMessage] = useState({}); // const [showDriverEditForm, setShowDriverEditForm] = useState(false);\n  // const [selectedDriver, setSelectedDriver] = useState(null);\n\n  useEffect(() => {\n    const getAllDrivers = async () => {\n      const allDrivers = await retriveDrivers();\n      if (allDrivers) setDrivers(allDrivers);\n    };\n\n    getAllDrivers();\n  }, []); //retrive all Drivers\n\n  const retriveDrivers = async () => {\n    const response = await API('drivers', 'GET');\n    return response;\n  };\n\n  const handleDelete = (event, driver) => {\n    setDriver(driver);\n    console.log(driver.id);\n    setModalShow(true);\n  };\n\n  const handleClose = () => {\n    setDriver(null);\n    setModalShow(false);\n  };\n\n  const handleDeleteDriver = async event => {\n    await API(`drivers/${driver.id}`, 'DELETE');\n    setDrivers(drivers.filter(dri => dri.id != driver.id));\n    setDriver(null); // filter((driver) => driver.id != \n    // props.deleteDriver(id, props.drivers)\n\n    setModalShow(false);\n  }; //   }\n\n\n  const toggle = () => setModalShow(!modalShow); // console.log(props.drivers)\n\n\n  let newList = [];\n\n  if (drivers) {\n    newList = drivers.map(driver => {\n      return Object.assign(driver, {\n        action: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `driver/${driver.id}`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info mr-2\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: event => handleDelete(event, driver),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      });\n    });\n  }\n\n  const newData = {\n    columns: [{\n      label: 'First Name',\n      field: 'firstName',\n      width: 100\n    }, {\n      label: 'Last Name',\n      field: 'lastName',\n      width: 100\n    }, {\n      label: 'Email',\n      field: 'email',\n      width: 100\n    }, {\n      label: 'Mobile No.',\n      field: 'mobile',\n      width: 100\n    }, {\n      label: 'Action',\n      field: 'action',\n      width: 200\n    }],\n    rows: newList\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-list mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                children: [/*#__PURE__*/_jsxDEV(AlertBox, {\n                  onClose: () => setMessage({}),\n                  alert: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"mb-0\",\n                  children: \"Drivers list\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n                  hover: true,\n                  entriesOptions: [5, 20, 25],\n                  entries: 20,\n                  pagesAmount: 4,\n                  data: newData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  isOpen: modalShow,\n                  toggle: toggle,\n                  className: \"d\",\n                  children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                    toggle: toggle,\n                    children: \"Delete Driver\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                    children: \"Are you sure to delete driver?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      className: \"btn-danger\",\n                      onClick: event => handleDeleteDriver(event),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 23\n                    }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"btn-info\",\n                      onClick: toggle,\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(DriverList, \"38lMx6/bnfNXCHddnxvEeNjbygg=\");\n\n_c = DriverList;\nexport default DriverList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverList\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/driver/DriverList.js"],"names":["React","useState","useEffect","MDBDataTableV5","Row","Col","Button","Container","Modal","ModalHeader","ModalBody","ModalFooter","Card","CardHeader","CardBody","Link","connect","fetchDriver","deleteDriver","updateDriver","AddDriver","API","AlertBox","DriverList","props","data","setData","modalShow","setModalShow","drivers","setDrivers","driver","setDriver","message","setMessage","getAllDrivers","allDrivers","retriveDrivers","response","handleDelete","event","console","log","id","handleClose","handleDeleteDriver","filter","dri","toggle","newList","map","Object","assign","action","pathname","newData","columns","label","field","width","rows"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { Row, Col,Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardHeader, CardBody\n } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './driver.scss';\nimport { connect } from \"react-redux\";\nimport { fetchDriver, deleteDriver, updateDriver } from '../../store/actions';\nimport AddDriver from './AddDriver';\nimport API from \"../../helpers/api\";\nimport AlertBox from '../../components/alerts/AlertBox';\n\nfunction DriverList(props) {\n  const [data, setData] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [drivers, setDrivers] = useState([]);\n  const [driver, setDriver] = useState([]);\n  const [message, setMessage] = useState({});\n  // const [showDriverEditForm, setShowDriverEditForm] = useState(false);\n  // const [selectedDriver, setSelectedDriver] = useState(null);\n\n    useEffect(() => {\n      const getAllDrivers = async () => {\n        const allDrivers = await retriveDrivers();\n        if(allDrivers) setDrivers(allDrivers);\n      }\n      getAllDrivers();\n  },[]);\n\n  //retrive all Drivers\n  const retriveDrivers = async () => {\n    const response = await API('drivers','GET');\n    return response;\n  }\n  const handleDelete =  (event, driver ) => {\n      setDriver(driver);\n      console.log(driver.id);\n      setModalShow(true);\n  }\n  const handleClose = () => {\n    setDriver(null)\n    setModalShow(false);\n  }\n  const handleDeleteDriver = async (event) =>{\n    await API(`drivers/${driver.id}`,'DELETE');\n    setDrivers(drivers.filter((dri)=>dri.id!=driver.id))\n    setDriver(null)\n    // filter((driver) => driver.id != \n      // props.deleteDriver(id, props.drivers)\n      setModalShow(false);\n  }\n  //   }\n\n  const toggle = () => setModalShow(!modalShow);\n  // console.log(props.drivers)\n  let newList = [];\n  if (drivers){\n       newList = drivers.map(driver => {\n        return Object.assign(driver, {\n            action: \n            <>\n              <Link to={{pathname:`driver/${driver.id}`}}><button className=\"btn btn-info mr-2\">View</button></Link>\n              <button className=\"btn btn-danger\"  onClick={(event) => handleDelete(event, driver)}>Delete</button>\n            </>\n        });\n    });\n  }\n\n  const newData={\n    columns: [\n      {\n        label: 'First Name',\n        field: 'firstName',\n        width: 100,\n      },\n      {\n        label: 'Last Name',\n        field: 'lastName',\n        width: 100,\n      },\n      {\n        label: 'Email',\n        field: 'email',\n        width: 100,\n      },\n      {\n        label: 'Mobile No.',\n        field: 'mobile',\n        width: 100,\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        width: 200,\n      },\n    ],\n    rows: newList\n  };\n\n\n\n    return(\n    <>\n      <div className=\"driver-list mt-5\">\n        <Container fluid>\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n        <AlertBox onClose={() => setMessage({})} alert={message} />\n                \n                  <h3 className=\"mb-0\">Drivers list</h3>\n                </CardHeader>\n                <CardBody>\n                  <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={20} pagesAmount={4} data={newData} />\n                  <Modal isOpen={modalShow} toggle={toggle} className=\"d\">\n                    <ModalHeader toggle={toggle}>Delete Driver</ModalHeader>\n                    <ModalBody>\n                      Are you sure to delete driver?\n                    </ModalBody>\n                    <ModalFooter>\n                      <Button className=\"btn-danger\" onClick={(event) => handleDeleteDriver(event)}>Delete</Button>{' '}\n                      <Button className=\"btn-info\" onClick={toggle}>Cancel</Button>\n                    </ModalFooter>\n                  </Modal>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  )\n}\nexport default DriverList;"]},"metadata":{},"sourceType":"module"}