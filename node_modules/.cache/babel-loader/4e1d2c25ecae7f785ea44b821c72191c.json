{"ast":null,"code":"import { ADD_DRIVER, ADD_DRIVER_SUCCESSFUL, ADD_DRIVER_FAILED, UPDATE_DRIVER, UPDATE_DRIVER_SUCCESSFUL, UPDATE_DRIVER_FAILED, FETCH_DRIVER, FETCH_DRIVER_SUCCESSFUL, FETCH_DRIVER_FAILED, DELETE_DRIVER, DELETE_DRIVER_FAILED, DELETE_DRIVER_SUCCESSFUL, EDIT_MODE } from './actionTypes';\nimport driver from './reducer';\nexport const addDriver = (data, history) => {\n  return {\n    type: ADD_DRIVER,\n    payload: {\n      data,\n      history\n    }\n  };\n};\nexport const addDriverSuccessful = driver => {\n  return {\n    type: ADD_DRIVER_SUCCESSFUL,\n    payload: driver\n  };\n};\nexport const addDriverFailed = () => {\n  return {\n    type: ADD_DRIVER_FAILED\n  };\n};\nexport const fetchDriver = () => {\n  return {\n    type: FETCH_DRIVER\n  };\n};\nexport const fetchDriverSuccessful = data => {\n  return {\n    type: FETCH_DRIVER_SUCCESSFUL,\n    data: data\n  };\n};\nexport const fetchDriverFailed = error => {\n  return {\n    type: FETCH_DRIVER_FAILED\n  };\n};\nexport const deleteDriver = (id, drivers) => {\n  return {\n    type: DELETE_DRIVER,\n    payload: {\n      id,\n      drivers\n    }\n  };\n};\nexport const deleteDriverSuccessful = (id, drivers) => {\n  return {\n    type: DELETE_DRIVER_SUCCESSFUL,\n    payload: {\n      id,\n      drivers\n    }\n  };\n};\nexport const deleteDriverFailed = () => {\n  return {\n    type: DELETE_DRIVER_FAILED\n  };\n};\nexport const switchEditMode = () => {\n  return {\n    type: EDIT_MODE\n  };\n};\nexport const updateDriver = (id, drivers) => {\n  return {\n    type: UPDATE_DRIVER,\n    payload: {\n      id,\n      drivers\n    }\n  };\n};\nexport const updateDriverSuccessful = (id, drivers) => {\n  return {\n    type: UPDATE_DRIVER_SUCCESSFUL,\n    payload: {\n      id,\n      drivers\n    }\n  };\n};\nexport const updateDriverFailed = () => {\n  return {\n    type: UPDATE_DRIVER_FAILED\n  };\n};","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/store/driver/actions.js"],"names":["ADD_DRIVER","ADD_DRIVER_SUCCESSFUL","ADD_DRIVER_FAILED","UPDATE_DRIVER","UPDATE_DRIVER_SUCCESSFUL","UPDATE_DRIVER_FAILED","FETCH_DRIVER","FETCH_DRIVER_SUCCESSFUL","FETCH_DRIVER_FAILED","DELETE_DRIVER","DELETE_DRIVER_FAILED","DELETE_DRIVER_SUCCESSFUL","EDIT_MODE","driver","addDriver","data","history","type","payload","addDriverSuccessful","addDriverFailed","fetchDriver","fetchDriverSuccessful","fetchDriverFailed","error","deleteDriver","id","drivers","deleteDriverSuccessful","deleteDriverFailed","switchEditMode","updateDriver","updateDriverSuccessful","updateDriverFailed"],"mappings":"AAAA,SAASA,UAAT,EAAsBC,qBAAtB,EAA6CC,iBAA7C,EAAgEC,aAAhE,EAA8EC,wBAA9E,EAAuGC,oBAAvG,EACIC,YADJ,EACkBC,uBADlB,EAC4CC,mBAD5C,EACiEC,aADjE,EACgFC,oBADhF,EACsGC,wBADtG,EACgIC,SADhI,QACgJ,eADhJ;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEjB,UADH;AAEHkB,IAAAA,OAAO,EAAE;AAAEH,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,mBAAmB,GAAIN,MAAD,IAAY;AAC3C,SAAO;AACHI,IAAAA,IAAI,EAAEhB,qBADH;AAEHiB,IAAAA,OAAO,EAACL;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMO,eAAe,GAAE,MAAM;AAChC,SAAO;AACHH,IAAAA,IAAI,EAAEf;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMmB,WAAW,GAAE,MAAM;AAC5B,SAAO;AACHJ,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMgB,qBAAqB,GAAIP,IAAD,IAAU;AAC3C,SAAO;AACHE,IAAAA,IAAI,EAAEV,uBADH;AAEHQ,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAMQ,iBAAiB,GAAGC,KAAD,IAAW;AACvC,SAAO;AACHP,IAAAA,IAAI,EAAET;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMiB,YAAY,GAAG,CAACC,EAAD,EAAKC,OAAL,KAAgB;AACxC,SAAM;AACFV,IAAAA,IAAI,EAACR,aADH;AAEFS,IAAAA,OAAO,EAAC;AAACQ,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAFN,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,sBAAsB,GAAG,CAACF,EAAD,EAAKC,OAAL,KAAiB;AACnD,SAAO;AACHV,IAAAA,IAAI,EAAEN,wBADH;AAEHO,IAAAA,OAAO,EAAE;AAACQ,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAE,MAAM;AACnC,SAAO;AACHZ,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMoB,cAAc,GAAG,MAAM;AAChC,SAAO;AACHb,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMmB,YAAY,GAAG,CAACL,EAAD,EAAKC,OAAL,KAAgB;AACxC,SAAM;AACFV,IAAAA,IAAI,EAACd,aADH;AAEFe,IAAAA,OAAO,EAAC;AAACQ,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAFN,GAAN;AAIH,CALM;AAOP,OAAO,MAAMK,sBAAsB,GAAG,CAACN,EAAD,EAAKC,OAAL,KAAiB;AACnD,SAAO;AACHV,IAAAA,IAAI,EAAEb,wBADH;AAEHc,IAAAA,OAAO,EAAE;AAACQ,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMM,kBAAkB,GAAE,MAAM;AACnC,SAAO;AACHhB,IAAAA,IAAI,EAAEZ;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { ADD_DRIVER , ADD_DRIVER_SUCCESSFUL, ADD_DRIVER_FAILED, UPDATE_DRIVER,UPDATE_DRIVER_SUCCESSFUL,UPDATE_DRIVER_FAILED,\n    FETCH_DRIVER, FETCH_DRIVER_SUCCESSFUL , FETCH_DRIVER_FAILED, DELETE_DRIVER, DELETE_DRIVER_FAILED, DELETE_DRIVER_SUCCESSFUL, EDIT_MODE} from './actionTypes';\nimport driver from './reducer';\n\nexport const addDriver = (data, history) => {\n    return {\n        type: ADD_DRIVER,\n        payload: { data, history }\n    }\n}\nexport const addDriverSuccessful = (driver) => {\n    return {\n        type: ADD_DRIVER_SUCCESSFUL,\n        payload:driver\n    }\n}\n\nexport const addDriverFailed= () => {\n    return {\n        type: ADD_DRIVER_FAILED\n    }\n}\n\nexport const fetchDriver= () => {\n    return {\n        type: FETCH_DRIVER\n    }\n}\n\nexport const fetchDriverSuccessful = (data) => {\n    return {\n        type: FETCH_DRIVER_SUCCESSFUL,\n        data: data\n    }\n}\n\nexport const fetchDriverFailed= (error) => {\n    return {\n        type: FETCH_DRIVER_FAILED\n    }\n}\n\nexport const deleteDriver = (id, drivers) =>{\n    return{\n        type:DELETE_DRIVER,\n        payload:{id, drivers}\n    }\n}\n\nexport const deleteDriverSuccessful = (id, drivers) => {\n    return {\n        type: DELETE_DRIVER_SUCCESSFUL,\n        payload: {id, drivers}\n    }\n}\n\nexport const deleteDriverFailed= () => {\n    return {\n        type: DELETE_DRIVER_FAILED\n    }\n}\n\nexport const switchEditMode = () => {\n    return {\n        type: EDIT_MODE\n    }\n}\n\nexport const updateDriver = (id, drivers) =>{\n    return{\n        type:UPDATE_DRIVER,\n        payload:{id, drivers}\n    }\n}\n\nexport const updateDriverSuccessful = (id, drivers) => {\n    return {\n        type: UPDATE_DRIVER_SUCCESSFUL,\n        payload: {id, drivers}\n    }\n}\n\nexport const updateDriverFailed= () => {\n    return {\n        type: UPDATE_DRIVER_FAILED\n    }\n}"]},"metadata":{},"sourceType":"module"}