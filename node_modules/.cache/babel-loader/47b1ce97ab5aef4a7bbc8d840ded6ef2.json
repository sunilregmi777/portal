{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/rider/info/AddressInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardHeader, CardBody, CardTitle, Container, Row, Col, FormGroup, Input, Label } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport _ from \"lodash/fp\";\nimport '../rider.scss';\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as alertMessage from '../../../components/alerts/AlertMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddRiderAddressSchema = yup.object().shape({\n  address: yup.string().required(),\n  city: yup.string().required(),\n  country: yup.string().required(),\n  state: yup.string().required().matches(/^[0-9]+$/).min(1).max(2)\n});\n\nfunction AddRiderAddress(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(AddRiderAddressSchema)\n  });\n  const [editMode, setEditMode] = useState(false);\n  const history = useHistory();\n\n  const editHandler = () => {\n    setEditMode(!editMode);\n  };\n\n  const OnSubmit = async data => {\n    const newData = { ...props.rider,\n      address: data\n    };\n    const response = await API(`riders/${props.id}`, 'PUT', newData);\n    props.toggleAlert(\"Riders's Address updated successfully\", alertMessage.SUCCESS);\n    setEditMode(false);\n  };\n\n  useEffect(() => {\n    console.log(props.rider.address);\n\n    if (props.rider.address == null) {\n      setEditMode(true);\n    } else setEditMode(false);\n  }, [props.rider]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      lg: \"6\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-0\",\n            children: \"Rider Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), props.rider && !editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: editHandler,\n              className: \"btn btn-warning\",\n              children: \"Edit Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(OnSubmit),\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"3\",\n                children: /*#__PURE__*/_jsxDEV(Label, {\n                  className: \"form-control-label col-form-label\",\n                  htmlFor: \"address\",\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"9\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  name: \"address\",\n                  className: errors.address ? \"is-invalid\" : \"\",\n                  placeholder: \"Address\",\n                  type: \"text\",\n                  innerRef: register,\n                  defaultValue: props.rider && props.rider.address != null ? props.rider.address.address : null,\n                  disabled: props.rider ? !editMode : editMode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), errors.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.address.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"3\",\n                children: /*#__PURE__*/_jsxDEV(Label, {\n                  className: \"form-control-label col-form-label\",\n                  htmlFor: \"city\",\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"9\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  name: \"city\",\n                  className: errors.city ? \"is-invalid\" : \"\",\n                  placeholder: \"City\",\n                  type: \"text\",\n                  innerRef: register,\n                  defaultValue: props.rider && props.rider.address != null ? props.rider.address.city : null,\n                  disabled: props.rider ? !editMode : editMode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), errors.city && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.city.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"3\",\n                children: /*#__PURE__*/_jsxDEV(Label, {\n                  className: \"form-control-label col-form-label\",\n                  htmlFor: \"state\",\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"9\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  name: \"state\",\n                  className: errors.state ? \"is-invalid\" : \"\",\n                  placeholder: \"State\",\n                  type: \"number\",\n                  innerRef: register,\n                  defaultValue: props.rider && props.rider.address != null ? props.rider.address.state : null,\n                  disabled: props.rider ? !editMode : editMode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), errors.state && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.state.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"3\",\n                children: /*#__PURE__*/_jsxDEV(Label, {\n                  className: \"form-control-label col-form-label\",\n                  htmlFor: \"country\",\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"9\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  name: \"country\",\n                  className: errors.country ? \"is-invalid\" : \"\",\n                  placeholder: \"Country\",\n                  type: \"text\",\n                  innerRef: register,\n                  defaultValue: props.rider && props.rider.address != null ? props.rider.address.country : null,\n                  disabled: props.rider ? !editMode : editMode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this), errors.country && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: errors.country.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), !props.rider.address ? /*#__PURE__*/_jsxDEV(Row, {\n              className: \"float-right\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: \"btn-info\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this) : editMode ? /*#__PURE__*/_jsxDEV(Row, {\n              className: \"float-right\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: \"btn-info\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddRiderAddress, \"3DIba0LL54ihtoqRl5A3Ueg3AoY=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = AddRiderAddress;\nexport default AddRiderAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiderAddress\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/rider/info/AddressInfo.js"],"names":["Breadcrumb","BreadcrumbItem","Button","Card","CardHeader","CardBody","CardTitle","Container","Row","Col","FormGroup","Input","Label","useForm","useHistory","React","useEffect","useState","_","API","yup","yupResolver","alertMessage","AddRiderAddressSchema","object","shape","address","string","required","city","country","state","matches","min","max","AddRiderAddress","props","register","handleSubmit","watch","errors","mode","resolver","editMode","setEditMode","history","editHandler","OnSubmit","data","newData","rider","response","id","toggleAlert","SUCCESS","console","log","message"],"mappings":"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","sourcesContent":["import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState} from 'react';\nimport _ from \"lodash/fp\";\nimport '../rider.scss';\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as alertMessage from '../../../components/alerts/AlertMessages';\n\n\nconst AddRiderAddressSchema = yup.object().shape({\n  address: yup.string().required(),\n  city: yup.string().required(),\n  country: yup.string().required(),\n  state: yup.string()\n    .required()\n    .matches(/^[0-9]+$/)\n    .min(1)\n    .max(2)\n});\n\n  function AddRiderAddress(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(AddRiderAddressSchema)\n    });\n    const[editMode, setEditMode] = useState(false);\n    const history = useHistory();\n\n    const editHandler = () =>{\n        setEditMode (!editMode);\n    }\n\n    const OnSubmit = async (data)  => {\n        const newData = {...props.rider, address: data}\n        const response = await API(`riders/${props.id}`, 'PUT', newData);\n        props.toggleAlert(\"Riders's Address updated successfully\",alertMessage.SUCCESS);\n        setEditMode(false)\n    }\n\n    useEffect(()=>{\n        console.log(props.rider.address)\n        if(props.rider.address==null){\n            setEditMode(true)\n        }\n        else setEditMode(false)\n    },[props.rider])\n\n    return(\n        <>\n            <Col lg=\"6\">\n                <Card>\n                    <CardHeader>\n                        <h3 className=\"mb-0\">Rider Address</h3>\n                        { props.rider && !editMode ?\n                                <div className=\"\">\n                                  <Button\n                                    onClick={editHandler}\n                                    className=\"btn btn-warning\"\n                                  >\n                                    Edit Address\n                                </Button>\n                            </div>\n                            :null\n                        }\n                    </CardHeader>\n                    <CardBody>\n                        <form onSubmit={handleSubmit(OnSubmit)}>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"address\"\n                                    >\n                                    Address\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"address\"\n                                        className={errors.address?\"is-invalid\":\"\"}\n                                        placeholder=\"Address\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.rider && props.rider.address!=null?props.rider.address.address:null }\n                                        disabled={props.rider?!editMode: editMode}\n                                    />\n                                    {errors.address && <div className=\"invalid-feedback\">{errors.address.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            \n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"city\"\n                                    >\n                                    City\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"city\"\n                                        className={errors.city?\"is-invalid\":\"\"}\n                                        placeholder=\"City\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.rider && props.rider.address!=null?props.rider.address.city:null }\n                                        disabled={props.rider?!editMode: editMode}\n                                    />\n                                    {errors.city && <div className=\"invalid-feedback\">{errors.city.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"state\"\n                                    >\n                                    State\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"state\"\n                                        className={errors.state?\"is-invalid\":\"\"}\n                                        placeholder=\"State\"\n                                        type=\"number\"\n                                        innerRef={register}\n                                        defaultValue ={props.rider && props.rider.address!=null?props.rider.address.state:null }\n                                        disabled={props.rider?!editMode: editMode}\n                                    />\n                                    {errors.state && <div className=\"invalid-feedback\">{errors.state.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"country\"\n                                    >\n                                    Country\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"country\"\n                                        className={errors.country?\"is-invalid\":\"\"}\n                                        placeholder=\"Country\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.rider && props.rider.address!=null?props.rider.address.country:null }\n                                        disabled={props.rider?!editMode: editMode}\n                                    />\n                                    {errors.country && <div className=\"invalid-feedback\">{errors.country.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            { !props.rider.address ?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                    </Col>\n                                </Row>:\n                                editMode?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Update</Button>\n                                    </Col>\n                                </Row>:null\n                            }\n                        </form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default AddRiderAddress;"]},"metadata":{},"sourceType":"module"}