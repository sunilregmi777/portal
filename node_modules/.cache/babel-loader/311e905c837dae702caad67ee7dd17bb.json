{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js\",\n    _s = $RefreshSig$();\n\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardBody, CardTitle, Container, Row, Col, FormGroup, Input } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash/fp\";\nimport './driver.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddDriver() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-driver\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Drier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-control-label\",\n                      htmlFor: \"firstname\",\n                      children: \"First Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 33,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"firstname\",\n                      name: \"firstname\",\n                      placeholder: \"First Name\",\n                      type: \"text\",\n                      innerRef: register({\n                        required: true,\n                        pattern: /^[A-Za-z]+$/i\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 45\n                    }, this), _.get(\"firstname.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"error-message\",\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 49\n                    }, this), _.get(\"firstname.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"error-message\",\n                      children: \"Name should be letters only\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-control-label\",\n                      htmlFor: \"lastname\",\n                      children: \"Middle Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"lastname\",\n                      name: \"lastname\",\n                      placeholder: \"Last Name\",\n                      type: \"text\",\n                      innerRef: register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-control-label\",\n                      htmlFor: \"lastname\",\n                      children: \"Last Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"lastname\",\n                      name: \"lastname\",\n                      placeholder: \"Address\",\n                      type: \"text\",\n                      innerRef: register({\n                        required: true,\n                        pattern: /^[A-Za-z]+$/i\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 45\n                    }, this), _.get(\"lastname.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"error-message\",\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 49\n                    }, this), _.get(\"lastname.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"error-message\",\n                      children: \"Name should be letters only\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-control-label\",\n                      htmlFor: \"email\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"email\",\n                      placeholder: \"Email\",\n                      type: \"email\",\n                      innerRef: register({\n                        required: true,\n                        pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 45\n                    }, this), _.get(\"email.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"error-message\",\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 49\n                    }, this), _.get(\"email.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"error-message\",\n                      children: \"Invalid Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-control-label\",\n                      htmlFor: \"lastname\",\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"address\",\n                      placeholder: \"Address\",\n                      type: \"text\",\n                      innerRef: register({\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 45\n                    }, this), _.get(\"address.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"error-message\",\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-control-label\",\n                      htmlFor: \"lastname\",\n                      children: \"Phone\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"phone\",\n                      placeholder: \"Phone No\",\n                      type: \"number\",\n                      innerRef: register({\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 45\n                    }, this), _.get(\"phone.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"error-message\",\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    className: \"btn-info\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddDriver, \"+Nrz0BYUZDnkIuhmBbPsJSfSlWM=\", false, function () {\n  return [useForm];\n});\n\n_c = AddDriver;\nexport default AddDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDriver\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js"],"names":["Breadcrumb","BreadcrumbItem","Button","Card","CardBody","CardTitle","Container","Row","Col","FormGroup","Input","useForm","_","AddDriver","register","handleSubmit","watch","errors","onSubmit","data","console","log","required","pattern","get"],"mappings":"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","sourcesContent":["import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash/fp\";\nimport './driver.scss';\n\n  function AddDriver(){\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = data => console.log(data);\n\n    return(\n        <>\n            <div className=\"add-driver\">\n                <Container fluid>\n                    <h1>Add Drier</h1>\n                    <Card className=\"mb-4\">\n                        <CardBody>\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <Row>\n                                    <Col md=\"4\">\n                                        <FormGroup>\n                                            <label\n                                              className=\"form-control-label\"\n                                              htmlFor=\"firstname\"\n                                            >\n                                              First Name\n                                            </label>\n                                            <Input\n                                              id=\"firstname\"\n                                              name=\"firstname\"\n                                              placeholder=\"First Name\"\n                                              type=\"text\"\n                                              innerRef={register({\n                                                  required: true,\n                                                  pattern: /^[A-Za-z]+$/i \n                                                })}\n                                            />\n                                            {_.get(\"firstname.type\", errors) === \"required\" && (\n                                                <p className=\"error-message\">This field is required</p>\n                                            )}\n                                            {_.get(\"firstname.type\", errors) === \"pattern\" && (\n                                                <p className=\"error-message\">Name should be letters only</p>\n                                            )}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <FormGroup>\n                                            <label\n                                              className=\"form-control-label\"\n                                              htmlFor=\"lastname\"\n                                            >\n                                            Middle Name\n                                            </label>\n                                            <Input\n                                              id=\"lastname\"\n                                              name=\"lastname\"\n                                              placeholder=\"Last Name\"\n                                              type=\"text\"\n                                              innerRef={register}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <FormGroup>\n                                            <label\n                                              className=\"form-control-label\"\n                                              htmlFor=\"lastname\"\n                                            >\n                                              Last Name\n                                            </label>\n                                            <Input\n                                                id=\"lastname\"\n                                                name=\"lastname\"\n                                                placeholder=\"Address\"\n                                                type=\"text\"\n                                                innerRef={register({\n                                                  required: true,\n                                                  pattern: /^[A-Za-z]+$/i \n                                                })}\n                                            />\n                                            {_.get(\"lastname.type\", errors) === \"required\" && (\n                                                <p className=\"error-message\">This field is required</p>\n                                            )}\n                                            {_.get(\"lastname.type\", errors) === \"pattern\" && (\n                                                <p className=\"error-message\">Name should be letters only</p>\n                                            )}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                   <Col md=\"4\">\n                                        <FormGroup>\n                                            <label\n                                              className=\"form-control-label\"\n                                              htmlFor=\"email\"\n                                            >\n                                            Email\n                                            </label>\n                                            <Input\n                                              name=\"email\"\n                                              placeholder=\"Email\"\n                                              type=\"email\"\n                                              innerRef={register({\n                                              required: true,\n                                              pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                                            })}\n                                            />\n                                            {_.get(\"email.type\", errors) === \"required\" && (\n                                                <p className=\"error-message\">This field is required</p>\n                                            )}\n                                            {_.get(\"email.type\", errors) === \"pattern\" && (\n                                               <p className=\"error-message\">Invalid Email</p>\n                                            )}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <FormGroup>\n                                            <label\n                                              className=\"form-control-label\"\n                                              htmlFor=\"lastname\"\n                                            >\n                                            Address\n                                            </label>\n                                            <Input\n                                              name=\"address\"\n                                              placeholder=\"Address\"\n                                              type=\"text\"\n                                              innerRef={register({\n                                                  required: true,\n                                                })}\n                                            />\n                                             {_.get(\"address.type\", errors) === \"required\" && (\n                                                <p className=\"error-message\">This field is required</p>\n                                            )}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <FormGroup>\n                                            <label\n                                              className=\"form-control-label\"\n                                              htmlFor=\"lastname\"\n                                            >\n                                            Phone\n                                            </label>\n                                            <Input\n                                              name=\"phone\"\n                                              placeholder=\"Phone No\"\n                                              type=\"number\"\n                                              innerRef={register({\n                                                  required: true,\n                                                })}\n                                            />\n                                             {_.get(\"phone.type\", errors) === \"required\" && (\n                                                <p className=\"error-message\">This field is required</p>\n                                            )}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </CardBody>\n                      </Card>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default AddDriver;"]},"metadata":{},"sourceType":"module"}