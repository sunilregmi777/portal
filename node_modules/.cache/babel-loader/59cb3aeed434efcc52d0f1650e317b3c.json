{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/driver/Driver.js\";\nimport React from \"react\";\nimport AddDriver from './AddDriver';\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardBody, CardTitle, Container, Row, Col, FormGroup, Input } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash/fp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Driver() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"driver view page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-control-label\",\n                  htmlFor: \"firstname\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"name\",\n                  name: \"name\",\n                  placeholder: \"Name\",\n                  type: \"text\",\n                  innerRef: register({\n                    required: true,\n                    pattern: /^[A-Za-z]+[A-Za-z]/i\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this), _.get(\"name.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: \"This field is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 41\n                }, this), _.get(\"name.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: \"Name should be letters only\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-control-label\",\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  type: \"email\",\n                  innerRef: register({\n                    required: true,\n                    pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), _.get(\"email.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: \"This field is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), _.get(\"email.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: \"Invalid Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-control-label\",\n                  htmlFor: \"lastname\",\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"address\",\n                  placeholder: \"Address\",\n                  type: \"text\",\n                  innerRef: register({\n                    required: true\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), _.get(\"address.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: \"This field is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-control-label\",\n                  htmlFor: \"lastname\",\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"phone\",\n                  placeholder: \"Phone No\",\n                  type: \"number\",\n                  innerRef: register({\n                    required: true\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), _.get(\"phone.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: \"This field is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"btn-info\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Driver;\nexport default Driver;\n\nvar _c;\n\n$RefreshReg$(_c, \"Driver\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/driver/Driver.js"],"names":["React","AddDriver","Breadcrumb","BreadcrumbItem","Button","Card","CardBody","CardTitle","Container","Row","Col","FormGroup","Input","useForm","_","Driver","handleSubmit","onSubmit","register","required","pattern","get","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AddDriver from './AddDriver';\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash/fp\";\nfunction Driver(){\n\treturn(\n\t\t<Container fluid>\n\t\t\t<h1>driver view page</h1>\n\t\t\t<Card className=\"mb-4\">\n                <CardBody>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <Row>\n                            <Col md=\"4\">\n                                <FormGroup>\n                                    <label\n                                      className=\"form-control-label\"\n                                      htmlFor=\"firstname\"\n                                    >\n                                    Name\n                                    </label>\n                                    <Input\n                                      id=\"name\"\n                                      name=\"name\"\n                                      placeholder=\"Name\"\n                                      type=\"text\"\n                                      innerRef={register({\n                                          required: true,\n                                          pattern: /^[A-Za-z]+[A-Za-z]/i \n                                        })}\n                                    />\n                                    {_.get(\"name.type\", errors) === \"required\" && (\n                                        <p className=\"error-message\">This field is required</p>\n                                    )}\n                                    {_.get(\"name.type\", errors) === \"pattern\" && (\n                                        <p className=\"error-message\">Name should be letters only</p>\n                                    )}\n                                </FormGroup>\n                            </Col>\n                            <Col md=\"4\">\n                                <FormGroup>\n                                    <label\n                                      className=\"form-control-label\"\n                                      htmlFor=\"email\"\n                                    >\n                                    Email\n                                    </label>\n                                    <Input\n                                      name=\"email\"\n                                      placeholder=\"Email\"\n                                      type=\"email\"\n                                      innerRef={register({\n                                      required: true,\n                                      pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n                                    })}\n                                    />\n                                    {_.get(\"email.type\", errors) === \"required\" && (\n                                        <p className=\"error-message\">This field is required</p>\n                                    )}\n                                    {_.get(\"email.type\", errors) === \"pattern\" && (\n                                       <p className=\"error-message\">Invalid Email</p>\n                                    )}\n                                </FormGroup>\n                            </Col>\n                            <Col md=\"4\">\n                                <FormGroup>\n                                    <label\n                                      className=\"form-control-label\"\n                                      htmlFor=\"lastname\"\n                                    >\n                                    Address\n                                    </label>\n                                    <Input\n                                      name=\"address\"\n                                      placeholder=\"Address\"\n                                      type=\"text\"\n                                      innerRef={register({\n                                          required: true,\n                                        })}\n                                    />\n                                     {_.get(\"address.type\", errors) === \"required\" && (\n                                        <p className=\"error-message\">This field is required</p>\n                                    )}\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                           \n                            <Col md=\"4\">\n                                <FormGroup>\n                                    <label\n                                      className=\"form-control-label\"\n                                      htmlFor=\"lastname\"\n                                    >\n                                    Phone\n                                    </label>\n                                    <Input\n                                      name=\"phone\"\n                                      placeholder=\"Phone No\"\n                                      type=\"number\"\n                                      innerRef={register({\n                                          required: true,\n                                        })}\n                                    />\n                                     {_.get(\"phone.type\", errors) === \"required\" && (\n                                        <p className=\"error-message\">This field is required</p>\n                                    )}\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </CardBody>\n            </Card>\n\t\t</Container>\n\t);\n}\nexport default Driver;"]},"metadata":{},"sourceType":"module"}