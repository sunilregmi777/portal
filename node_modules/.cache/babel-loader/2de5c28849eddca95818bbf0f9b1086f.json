{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/components/alerts/AlertBox.js\";\nimport React, { useState } from 'react';\nimport { Alert, Spinner } from 'reactstrap';\nimport * as alertMessage from './AlertMessages';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport ProgressProvider from './ProgressProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AlertBox(props) {\n  const percentage = 66;\n\n  const onDismiss = () => props.closeAlert();\n\n  const parseColor = () => {\n    switch (props.type) {\n      case alertMessage.SUCCESS:\n        return \"success\";\n\n      case alertMessage.ERROR:\n        return \"danger\";\n\n      case alertMessage.INFO:\n        return \"info\";\n\n      case alertMessage.WARNING:\n        return \"warning\";\n\n      default:\n        return \"info\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    color: parseColor(),\n    isOpen: props.showAlert,\n    toggle: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(ProgressProvider, {\n      values: [0, 100],\n      children: percentage => /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n        value: percentage,\n        styles: buildStyles({\n          pathTransition: percentage === 0 ? \"none\" : \"stroke-dashoffset 0.5s ease 0s\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AlertBox;\nexport default AlertBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertBox\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/components/alerts/AlertBox.js"],"names":["React","useState","Alert","Spinner","alertMessage","CircularProgressbar","buildStyles","ProgressProvider","AlertBox","props","percentage","onDismiss","closeAlert","parseColor","type","SUCCESS","ERROR","INFO","WARNING","showAlert","pathTransition","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA8B,YAA9B;AACA,OAAO,KAAKC,YAAZ,MAA8B,iBAA9B;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,4BAAjD;AACA,OAAO,4CAAP;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACrB,QAAMC,UAAU,GAAG,EAAnB;;AACF,QAAMC,SAAS,GAAG,MAAMF,KAAK,CAACG,UAAN,EAAxB;;AACA,QAAMC,UAAU,GAAC,MAAI;AACpB,YAAQJ,KAAK,CAACK,IAAd;AACO,WAAKV,YAAY,CAACW,OAAlB;AACG,eAAO,SAAP;;AACH,WAAKX,YAAY,CAACY,KAAlB;AACI,eAAO,QAAP;;AACJ,WAAKZ,YAAY,CAACa,IAAlB;AACI,eAAO,MAAP;;AACJ,WAAKb,YAAY,CAACc,OAAlB;AACI,eAAO,SAAP;;AACJ;AAAS,eAAO,MAAP;AAThB;AAWA,GAZD;;AAcA,sBACO,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEL,UAAU,EAAxB;AAA4B,IAAA,MAAM,EAAEJ,KAAK,CAACU,SAA1C;AAAqD,IAAA,MAAM,EAAER,SAA7D;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ,CAA1B;AAAA,gBACDD,UAAU,iBACT,QAAC,mBAAD;AACE,QAAA,KAAK,EAAEA,UADT;AAEE,QAAA,MAAM,EAAEJ,WAAW,CAAC;AAClBc,UAAAA,cAAc,EACZV,UAAU,KAAK,CAAf,GAAmB,MAAnB,GAA4B;AAFZ,SAAD;AAFrB;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYD;AAAA,gBAASD,KAAK,CAACY;AAAf;AAAA;AAAA;AAAA;AAAA,YAZC;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAiBA;;KAlCQb,Q;AAoCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Alert, Spinner} from 'reactstrap';\nimport * as alertMessage from './AlertMessages';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport ProgressProvider from './ProgressProvider';\nfunction AlertBox(props){\n  \tconst percentage = 66;\n\tconst onDismiss = () => props.closeAlert();\n\tconst parseColor=()=>{\n\t\tswitch (props.type) {\n\t        case alertMessage.SUCCESS:\n\t           return \"success\";\n\t        case alertMessage.ERROR:\n\t            return \"danger\";\n\t        case alertMessage.INFO:\n\t            return \"info\";\n\t        case alertMessage.WARNING:\n\t            return \"warning\";\n\t        default: return \"info\";\n\t      }\n\t}\n\n\treturn (\n        <Alert color={parseColor()} isOpen={props.showAlert} toggle={onDismiss} >\n            <ProgressProvider values={[0, 100]}>\n\t\t        {percentage => (\n\t\t          <CircularProgressbar\n\t\t            value={percentage}\n\t\t            styles={buildStyles({\n\t\t              pathTransition:\n\t\t                percentage === 0 ? \"none\" : \"stroke-dashoffset 0.5s ease 0s\"\n\t\t            })}\n\t\t          />\n\t\t        )}\n\t\t      </ProgressProvider>\n\t      <strong>{props.message}</strong> \n\t    </Alert>\n    );\n\n}\n\nexport default AlertBox;"]},"metadata":{},"sourceType":"module"}