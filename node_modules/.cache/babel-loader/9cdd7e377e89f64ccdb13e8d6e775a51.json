{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js\",\n    _s = $RefreshSig$();\n\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardBody, CardTitle, Container, Row, Col, FormGroup, Input } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash/fp\";\nimport './driver.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddDriver() {\n  _s();\n\n  const Input = ({\n    label,\n    register,\n    required\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: label,\n      ref: register({\n        required\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-driver\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Drier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      id: \"firstname\",\n                      name: \"firstname\",\n                      placeholder: \"First Name\",\n                      label: \"First Name\",\n                      type: \"text\",\n                      ref: register({\n                        required: true,\n                        pattern: /^[A-Za-z]+$/i\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 45\n                    }, this), _.get(\"firstname.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 49\n                    }, this), _.get(\"firstname.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Name should be letters only\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"lastname\",\n                      name: \"lastname\",\n                      placeholder: \"Middle Name\",\n                      type: \"text\",\n                      label: \"Last Name\",\n                      ref: register\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      id: \"lastname\",\n                      name: \"lastname\",\n                      placeholder: \"Address\",\n                      type: \"text\",\n                      label: \"Last Name\",\n                      ref: register({\n                        required: true,\n                        pattern: /^[A-Za-z]+$/i\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 45\n                    }, this), _.get(\"lastname.type\", errors) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 49\n                    }, this), _.get(\"lastname.type\", errors) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Name should be letters only\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    className: \"btn-info\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddDriver, \"+Nrz0BYUZDnkIuhmBbPsJSfSlWM=\", false, function () {\n  return [useForm];\n});\n\n_c = AddDriver;\nexport default AddDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDriver\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js"],"names":["Breadcrumb","BreadcrumbItem","Button","Card","CardBody","CardTitle","Container","Row","Col","FormGroup","Input","useForm","_","AddDriver","label","register","required","handleSubmit","watch","errors","onSubmit","data","console","log","pattern","get"],"mappings":"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","sourcesContent":["import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash/fp\";\nimport './driver.scss';\n\n  function AddDriver(){\n    const Input = ({ label, register, required }) => ( \n      <>\n        <label>{label}</label>\n        <input name={label} ref={register({ required })} />\n      </>\n    );\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = data => console.log(data);\n\n    return(\n        <>\n            <div className=\"add-driver\">\n                <Container fluid>\n                    <h1>Add Drier</h1>\n                    <Card className=\"mb-4\">\n                        <CardBody>\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <Row>\n                                    <Col md=\"4\">\n                                        <FormGroup>\n                                            <Input\n                                              id=\"firstname\"\n                                              name=\"firstname\"\n                                              placeholder=\"First Name\"\n                                              label=\"First Name\"\n                                              type=\"text\"\n                                              ref={register({\n                                                  required: true,\n                                                  pattern: /^[A-Za-z]+$/i \n                                                })}\n                                            />\n                                            {_.get(\"firstname.type\", errors) === \"required\" && (\n                                                <p>This field is required</p>\n                                            )}\n                                            {_.get(\"firstname.type\", errors) === \"pattern\" && (\n                                                <p>Name should be letters only</p>\n                                            )}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <FormGroup>\n                                            <Input\n                                              id=\"lastname\"\n                                              name=\"lastname\"\n                                              placeholder=\"Middle Name\"\n                                              type=\"text\"\n                                              label=\"Last Name\"\n                                              ref={register}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <FormGroup>\n                                            <Input\n                                                id=\"lastname\"\n                                                name=\"lastname\"\n                                                placeholder=\"Address\"\n                                                type=\"text\"\n                                                label=\"Last Name\"\n                                                ref={register({\n                                                  required: true,\n                                                  pattern: /^[A-Za-z]+$/i \n                                                })}\n                                            />\n                                            {_.get(\"lastname.type\", errors) === \"required\" && (\n                                                <p>This field is required</p>\n                                            )}\n                                            {_.get(\"lastname.type\", errors) === \"pattern\" && (\n                                                <p>Name should be letters only</p>\n                                            )}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </CardBody>\n                      </Card>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default AddDriver;"]},"metadata":{},"sourceType":"module"}