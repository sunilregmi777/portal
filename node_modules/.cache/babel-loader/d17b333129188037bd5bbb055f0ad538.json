{"ast":null,"code":"import { fork, put, all, call, takeEvery } from 'redux-saga/effects';\nimport { addDriverSuccessful, fetchDriverSuccessful } from './actions';\nimport { ADD_DRIVER } from './actionTypes';\nimport { baseUrl } from '../../helpers/api';\nimport axios from 'axios';\n\nfunction* addDriver({\n  payload\n}) {\n  try {\n    const response = yield call(axios.post(`${baseUrl}/drivers`, payload));\n    yield put(addDriverSuccessful()); // history.push(\"/driver-list\");\n  } catch (error) {\n    yield put(loginError(error));\n  }\n}\n\nexport function* watchAddDriver() {\n  yield takeEvery(ADD_DRIVER, addDriver);\n}\nexport function* addDriverSaga() {\n  yield all([fork(watchAddDriver)]);\n}\n\nfunction* fetchDriver() {\n  try {\n    const response = yield call(axios.get(`${baseUrl}/drivers`));\n\n    if (response.status >= 200 && response.status <= 299) {\n      yield put(fetchDriverSuccessful(response.data));\n    }\n  } catch (error) {\n    yield put(loginError(error));\n  }\n}\n\nexport function* watchFetchDriver() {\n  yield takeEvery(FETCH_DRIVER, fetchDriver);\n}\nexport function* fetchDriverSaga() {\n  yield all([fork(watchFetchDriver)]);\n}","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/store/driver/saga.js"],"names":["fork","put","all","call","takeEvery","addDriverSuccessful","fetchDriverSuccessful","ADD_DRIVER","baseUrl","axios","addDriver","payload","response","post","error","loginError","watchAddDriver","addDriverSaga","fetchDriver","get","status","data","watchFetchDriver","FETCH_DRIVER","fetchDriverSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,SAA/B,QAAgD,oBAAhD;AAEA,SAASC,mBAAT,EAA8BC,qBAA9B,QAA2D,WAA3D;AAEA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAC7B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACM,KAAK,CAACI,IAAN,CAAY,GAAEL,OAAQ,UAAtB,EAAiCG,OAAjC,CAAD,CAA3B;AACI,UAAMV,GAAG,CAACI,mBAAmB,EAApB,CAAT,CAFJ,CAGI;AACH,GAJL,CAKA,OAAOS,KAAP,EAAc;AACV,UAAMb,GAAG,CAACc,UAAU,CAACD,KAAD,CAAX,CAAT;AACH;AACJ;;AAED,OAAO,UAAUE,cAAV,GAA2B;AAC9B,QAAMZ,SAAS,CAACG,UAAD,EAAaG,SAAb,CAAf;AACH;AAED,OAAO,UAAUO,aAAV,GAA0B;AAC7B,QAAMf,GAAG,CAAC,CAACF,IAAI,CAACgB,cAAD,CAAL,CAAD,CAAT;AACH;;AAED,UAAUE,WAAV,GAAwB;AACpB,MAAI;AACA,UAAMN,QAAQ,GAAG,MAAMT,IAAI,CAACM,KAAK,CAACU,GAAN,CAAW,GAAEX,OAAQ,UAArB,CAAD,CAA3B;;AACA,QAAGI,QAAQ,CAACQ,MAAT,IAAmB,GAAnB,IAA0BR,QAAQ,CAACQ,MAAT,IAAkB,GAA/C,EAAmD;AAC/C,YAAMnB,GAAG,CAACK,qBAAqB,CAACM,QAAQ,CAACS,IAAV,CAAtB,CAAT;AACH;AACJ,GALD,CAMA,OAAOP,KAAP,EAAc;AACV,UAAMb,GAAG,CAACc,UAAU,CAACD,KAAD,CAAX,CAAT;AACH;AACJ;;AAED,OAAO,UAAUQ,gBAAV,GAA6B;AAChC,QAAMlB,SAAS,CAACmB,YAAD,EAAeL,WAAf,CAAf;AACH;AAED,OAAO,UAAUM,eAAV,GAA4B;AAC/B,QAAMtB,GAAG,CAAC,CAACF,IAAI,CAACsB,gBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { fork, put, all, call, takeEvery } from 'redux-saga/effects'\n\nimport { addDriverSuccessful, fetchDriverSuccessful } from './actions';\n\nimport { ADD_DRIVER } from './actionTypes';\nimport { baseUrl} from '../../helpers/api';\nimport axios from 'axios';\n\n\nfunction* addDriver({ payload }) {\n    try {\n        const response = yield call(axios.post(`${baseUrl}/drivers`, payload ));\n            yield put(addDriverSuccessful());\n            // history.push(\"/driver-list\");\n        }\n    catch (error) {\n        yield put(loginError(error));\n    }\n}\n\nexport function* watchAddDriver() {\n    yield takeEvery(ADD_DRIVER, addDriver);\n}\n\nexport function* addDriverSaga() {\n    yield all([fork(watchAddDriver)]);\n}\n\nfunction* fetchDriver() {\n    try {\n        const response = yield call(axios.get(`${baseUrl}/drivers` ));\n        if(response.status >= 200 && response.status <=299){\n            yield put(fetchDriverSuccessful(response.data));\n        }\n    }\n    catch (error) {\n        yield put(loginError(error));\n    }\n}\n\nexport function* watchFetchDriver() {\n    yield takeEvery(FETCH_DRIVER, fetchDriver);\n}\n\nexport function* fetchDriverSaga() {\n    yield all([fork(watchFetchDriver)]);\n}\n"]},"metadata":{},"sourceType":"module"}