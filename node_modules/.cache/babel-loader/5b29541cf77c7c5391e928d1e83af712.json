{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/home/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PageNavbar from \"../../components/navbar/PageNavbar\";\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport routes from '../../routes';\nimport logo from \"../../assets/img/brand/argon-react.png\";\nimport Driver from \"../driver/Driver\";\nimport Rider from \"../rider/Rider\";\nimport RiderList from \"../rider/RiderList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home(props) {\n  _s();\n\n  const [sideNavOpen, setSideNavOpen] = useState(true);\n  const mainContent = useRef();\n  const history = useHistory();\n  useEffect(() => {\n    if (!props.isAuthenticated) {\n      console.log(\"This is test\");\n      history.push(\"/login\");\n    }\n  }, []);\n\n  const toggleSidenav = e => {\n    if (document.body.classList.contains(\"g-sidenav-pinned\")) {\n      document.body.classList.remove(\"g-sidenav-pinned\");\n      document.body.classList.add(\"g-sidenav-hidden\");\n    } else {\n      document.body.classList.add(\"g-sidenav-pinned\");\n      document.body.classList.remove(\"g-sidenav-hidden\");\n    }\n\n    setSideNavOpen(!sideNavOpen);\n  };\n\n  const getRoutes = routes => {\n    return routes.map((route, key) => {\n      if (route.collapse) {\n        return getRoutes(route.views);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        component: route.component\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      sideNavOpen: sideNavOpen,\n      toggleSidenav: toggleSidenav,\n      routes: routes,\n      logo: {\n        innerLink: \"/\",\n        imgSrc: logo,\n        imgAlt: \"...\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      ref: mainContent,\n      children: [/*#__PURE__*/_jsxDEV(PageNavbar, {\n        toggleSidenav: toggleSidenav,\n        sidenavOpen: sideNavOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Route, {\n          from: \"/driver/:id\",\n          component: Driver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          from: \"/rider/:id\",\n          component: Rider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), sideNavOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop d-xl-none\",\n      onClick: toggleSidenav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(Home, \"GaFNSbHm01OCabPAmDOuiluUU+s=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.login.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/home/Home.js"],"names":["useState","useRef","useEffect","Route","Switch","Redirect","useHistory","connect","PageNavbar","Sidebar","routes","logo","Driver","Rider","RiderList","Home","props","sideNavOpen","setSideNavOpen","mainContent","history","isAuthenticated","console","log","push","toggleSidenav","e","document","body","classList","contains","remove","add","getRoutes","map","route","key","collapse","views","path","component","innerLink","imgSrc","imgAlt","mapStateToProps","state","login"],"mappings":"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","sourcesContent":["\nimport { useState, useRef, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport PageNavbar from \"../../components/navbar/PageNavbar\";\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport routes from '../../routes';\nimport logo from \"../../assets/img/brand/argon-react.png\";\nimport Driver from \"../driver/Driver\";\nimport Rider from \"../rider/Rider\";\nimport RiderList from \"../rider/RiderList\";\n\n\n\nfunction Home(props) {\n    const [sideNavOpen, setSideNavOpen] = useState(true);\n\n    const mainContent = useRef();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!props.isAuthenticated) {\n            console.log(\"This is test\")\n            history.push(\"/login\");\n        }\n    }, [])\n\n    const toggleSidenav = e => {\n        if (document.body.classList.contains(\"g-sidenav-pinned\")) {\n            document.body.classList.remove(\"g-sidenav-pinned\");\n            document.body.classList.add(\"g-sidenav-hidden\");\n        } else {\n            document.body.classList.add(\"g-sidenav-pinned\");\n            document.body.classList.remove(\"g-sidenav-hidden\");\n        }\n        setSideNavOpen(!sideNavOpen)\n    };\n\n    const getRoutes = routes => {\n        return routes.map((route, key) => {\n            if (route.collapse) {\n                return getRoutes(route.views);\n            }\n            return (\n                <Route\n                    path={route.path}\n                    component={route.component}\n                    key={key}\n                />\n\n            );\n        });\n    };\n    return (\n        <>\n            <Sidebar\n                sideNavOpen={sideNavOpen}\n                toggleSidenav={toggleSidenav}\n                routes={routes}\n                logo={{\n                    innerLink: \"/\",\n                    imgSrc: logo,\n                    imgAlt: \"...\"\n                }} />\n            <div\n                className=\"main-content\"\n                ref={mainContent}>\n                <PageNavbar\n                    toggleSidenav={toggleSidenav}\n                    sidenavOpen={sideNavOpen} />\n                <Switch>\n                    {getRoutes(routes)}\n                    <Route from=\"/driver/:id\" component={Driver}/>\n                    <Route from=\"/rider/:id\" component={Rider}/>\n                </Switch>\n            </div>\n            {sideNavOpen ? (\n                <div className=\"backdrop d-xl-none\" onClick={toggleSidenav} />\n            ) : null}\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { isAuthenticated: state.login.isAuthenticated };\n};\n\nexport default connect(mapStateToProps)(Home);\n\n"]},"metadata":{},"sourceType":"module"}