{"ast":null,"code":"import { fork, put, all, call, takeEvery } from 'redux-saga/effects';\nimport { addDriverSuccessful, fetchDriverSuccessful, fetchDriverFailed } from './actions';\nimport { ADD_DRIVER, FETCH_DRIVER } from './actionTypes';\nimport API from '../../helpers/api';\nimport axios from 'axios';\n\nfunction* addDriver({\n  payload\n}) {\n  try {\n    const data = yield call(API, \"drivers\", \"post\");\n    console.log(\"add\", data);\n    yield put(addDriverSuccessful(data.data.data)); // history.push(\"/driver-list\");\n  } catch (error) {// yield put(loginError(error));\n  }\n}\n\nexport function* watchAddDriver() {\n  yield takeEvery(ADD_DRIVER, addDriver);\n}\nexport function* addDriverSaga() {\n  yield all([fork(watchAddDriver)]);\n}\n\nfunction* fetchDriver() {\n  try {\n    const data = yield call(API, \"drivers\", \"get\");\n    yield put(fetchDriverSuccessful(data));\n  } catch (error) {\n    console.log(error);\n    yield put(fetchDriverFailed(error));\n  }\n} // function getDriver(){\n//     return\n//         axios\n//         .get(`${baseUrl}/drivers` )\n//         .then((response) =>{\n//             console.log(\"test\")\n//             console.log(response)\n//             if(response.status >= 200 && response.status <=299){\n//                 console.log(response.data)\n//                 return {data:response.data}\n//             }\n//         })\n// }\n\n\nexport function* watchFetchDriver() {\n  yield takeEvery(FETCH_DRIVER, fetchDriver);\n}\nexport function* fetchDriverSaga() {\n  yield all([fork(watchFetchDriver)]);\n}","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/store/driver/saga.js"],"names":["fork","put","all","call","takeEvery","addDriverSuccessful","fetchDriverSuccessful","fetchDriverFailed","ADD_DRIVER","FETCH_DRIVER","API","axios","addDriver","payload","data","console","log","error","watchAddDriver","addDriverSaga","fetchDriver","watchFetchDriver","fetchDriverSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,SAA/B,QAAgD,oBAAhD;AAEA,SAASC,mBAAT,EAA8BC,qBAA9B,EAAqDC,iBAArD,QAA6E,WAA7E;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,eAAzC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAC7B,MAAI;AAEA,UAAMC,IAAI,GAAG,MAAMX,IAAI,CAACO,GAAD,EAAM,SAAN,EAAiB,MAAjB,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,IAAnB;AACI,UAAMb,GAAG,CAACI,mBAAmB,CAACS,IAAI,CAACA,IAAL,CAAUA,IAAX,CAApB,CAAT,CAJJ,CAKI;AACH,GANL,CAOA,OAAOG,KAAP,EAAc,CACV;AACH;AACJ;;AAED,OAAO,UAAUC,cAAV,GAA2B;AAC9B,QAAMd,SAAS,CAACI,UAAD,EAAaI,SAAb,CAAf;AACH;AAED,OAAO,UAAUO,aAAV,GAA0B;AAC7B,QAAMjB,GAAG,CAAC,CAACF,IAAI,CAACkB,cAAD,CAAL,CAAD,CAAT;AACH;;AAED,UAAUE,WAAV,GAAwB;AACpB,MAAI;AACA,UAAMN,IAAI,GAAG,MAAMX,IAAI,CAACO,GAAD,EAAM,SAAN,EAAiB,KAAjB,CAAvB;AACI,UAAMT,GAAG,CAACK,qBAAqB,CAACQ,IAAD,CAAtB,CAAT;AACP,GAHD,CAIA,OAAOG,KAAP,EAAc;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,UAAMhB,GAAG,CAACM,iBAAiB,CAACU,KAAD,CAAlB,CAAT;AACH;AACJ,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,UAAUI,gBAAV,GAA6B;AAChC,QAAMjB,SAAS,CAACK,YAAD,EAAeW,WAAf,CAAf;AACH;AAED,OAAO,UAAUE,eAAV,GAA4B;AAC/B,QAAMpB,GAAG,CAAC,CAACF,IAAI,CAACqB,gBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { fork, put, all, call, takeEvery } from 'redux-saga/effects'\n\nimport { addDriverSuccessful, fetchDriverSuccessful ,fetchDriverFailed} from './actions';\n\nimport { ADD_DRIVER, FETCH_DRIVER } from './actionTypes';\nimport API from '../../helpers/api';\nimport axios from 'axios';\n\n\nfunction* addDriver({ payload }) {\n    try {\n        \n        const data = yield call(API, \"drivers\", \"post\");\n        console.log(\"add\", data)\n            yield put(addDriverSuccessful(data.data.data));\n            // history.push(\"/driver-list\");\n        }\n    catch (error) {\n        // yield put(loginError(error));\n    }\n}\n\nexport function* watchAddDriver() {\n    yield takeEvery(ADD_DRIVER, addDriver);\n}\n\nexport function* addDriverSaga() {\n    yield all([fork(watchAddDriver)]);\n}\n\nfunction* fetchDriver() {\n    try {\n        const data = yield call(API, \"drivers\", \"get\");\n            yield put(fetchDriverSuccessful(data));\n    }\n    catch (error) {\n        console.log(error)\n        yield put(fetchDriverFailed(error));\n    }\n}\n\n// function getDriver(){\n//     return\n//         axios\n//         .get(`${baseUrl}/drivers` )\n//         .then((response) =>{\n//             console.log(\"test\")\n//             console.log(response)\n//             if(response.status >= 200 && response.status <=299){\n//                 console.log(response.data)\n//                 return {data:response.data}\n//             }\n//         })\n    \n// }\nexport function* watchFetchDriver() {\n    yield takeEvery(FETCH_DRIVER, fetchDriver);\n}\n\nexport function* fetchDriverSaga() {\n    yield all([fork(watchFetchDriver)]);\n}\n"]},"metadata":{},"sourceType":"module"}