{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/driver/DriverList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { Button, Container } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './driver.scss';\nimport { connect } from \"react-redux\";\nimport { fetchDriver, deleteDriver } from '../../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DriverList(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const deleteDriver = data => {\n    props.addDriver(data, history);\n  };\n\n  console.log(props.drivers);\n  let newList = [];\n\n  if (props.drivers) {\n    newList = props.drivers.map(drivers => {\n      return Object.assign(drivers, {\n        action: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: deleteDriver,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      });\n    });\n  }\n\n  const newData = {\n    columns: [{\n      label: 'Name',\n      field: 'name',\n      width: 100\n    }, {\n      label: 'Email',\n      field: 'email',\n      width: 100\n    }, {\n      label: 'Address',\n      field: 'address',\n      width: 100\n    }, {\n      label: 'Phone No.',\n      field: 'phone',\n      width: 100\n    }, {\n      label: 'Action',\n      field: 'action',\n      width: 200\n    }],\n    rows: newList\n  };\n  useEffect(() => {\n    props.fetchDriver();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-list\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"driver list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n          hover: true,\n          entriesOptions: [5, 20, 25],\n          entries: 20,\n          pagesAmount: 4,\n          data: newData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(DriverList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = DriverList;\n\nconst mapStateToProps = state => {\n  return {\n    drivers: state.driver.drivers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchDriver,\n  deleteDriver\n})(DriverList);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverList\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/driver/DriverList.js"],"names":["React","useState","useEffect","MDBDataTableV5","Button","Container","Link","connect","fetchDriver","deleteDriver","DriverList","props","data","setData","addDriver","history","console","log","drivers","newList","map","Object","assign","action","newData","columns","label","field","width","rows","mapStateToProps","state","driver"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { Button, Container } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './driver.scss';\nimport { connect } from \"react-redux\";\nimport { fetchDriver, deleteDriver } from '../../store/actions';\n\nfunction DriverList(props) {\n  const [data, setData] = useState([])\n\n  const deleteDriver =  data  => {\n      props.addDriver(data, history)\n    }\n  console.log(props.drivers)\n  let newList = [];\n  if (props.drivers){\n       newList = props.drivers.map(drivers => {\n        return Object.assign(drivers, {\n            action: <><button className=\"btn btn-primary\">Edit</button>\n                    <button className=\"btn btn-danger\" onClick={deleteDriver}>Delete</button></>\n        });\n    });\n  }\n\n  const newData={\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        width: 100,\n      },\n      {\n        label: 'Email',\n        field: 'email',\n        width: 100,\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        width: 100,\n      },\n      {\n        label: 'Phone No.',\n        field: 'phone',\n        width: 100,\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        width: 200,\n      },\n    ],\n    rows: newList\n  };\n\n  useEffect(() => {\n      props.fetchDriver();\n  },[]);\n\n    return(\n    <>\n      <div className=\"driver-list\">\n        <Container fluid>\n          <h1>driver list</h1>\n          <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={20} pagesAmount={4} data={newData} />\n        </Container>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    drivers: state.driver.drivers,\n  };\n};\nexport default connect(mapStateToProps, { fetchDriver, deleteDriver })(DriverList);"]},"metadata":{},"sourceType":"module"}