{"ast":null,"code":"var _jsxFileName = \"/home/sunil/Karyathalo/admin-portal/src/pages/rider/Rider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport BasicInfo from './info/BasicInfo';\nimport AddressInfo from './info/AddressInfo';\nimport { useLocation, useParams } from \"react-router-dom\";\nimport API from '../../helpers/api';\nimport AlertBox from '../../components/alerts/AlertBox';\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardBody, CardTitle, Container, Row, Col, FormGroup, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Rider(props) {\n  _s();\n\n  const [rider, setRider] = useState('');\n  const params = useParams();\n  const [alert, setAlert] = useState({});\n\n  const toggleAlert = (msg, type) => {\n    setAlert({\n      type: type,\n      message: msg\n    });\n    setTimeout(function () {\n      setAlert({});\n    }, 5000);\n  };\n\n  useEffect(() => {\n    API(`riders/${params.id}`, \"GET\").then(data => setRider(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-driver mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(AlertBox, {\n          showAlert: alert.message ? true : false,\n          message: alert.message,\n          type: alert.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(BasicInfo, {\n            id: params.id,\n            rider: rider,\n            toggleAlert: toggleAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(AddressInfo, {\n            id: params.id,\n            rider: rider,\n            toggleAlert: toggleAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Rider, \"zfiRbXrRMfpNItdG1ii4XYOhmYc=\", false, function () {\n  return [useParams];\n});\n\n_c = Rider;\nexport default Rider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rider\");","map":{"version":3,"sources":["/home/sunil/Karyathalo/admin-portal/src/pages/rider/Rider.js"],"names":["React","useEffect","useState","BasicInfo","AddressInfo","useLocation","useParams","API","AlertBox","Breadcrumb","BreadcrumbItem","Button","Card","CardBody","CardTitle","Container","Row","Col","FormGroup","Input","Rider","props","rider","setRider","params","alert","setAlert","toggleAlert","msg","type","message","setTimeout","id","then","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,kBAArC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,SACIC,UADJ,EAEIC,cAFJ,EAGIC,MAHJ,EAIIC,IAJJ,EAKIC,QALJ,EAMIC,SANJ,EAOIC,SAPJ,EAQIC,GARJ,EASIC,GATJ,EAUIC,SAVJ,EAWIC,KAXJ,QAYS,YAZT;;;;AAcA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AACnB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMsB,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMyB,WAAW,GAAC,CAACC,GAAD,EAAMC,IAAN,KAAa;AAC7BH,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEA,IADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAG,IAAAA,UAAU,CAAC,YAAW;AAClBL,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAFS,EAEP,IAFO,CAAV;AAGD,GARD;;AAUAzB,EAAAA,SAAS,CAAC,MAAK;AACXM,IAAAA,GAAG,CAAE,UAASiB,MAAM,CAACQ,EAAG,EAArB,EAAwB,KAAxB,CAAH,CAAkCC,IAAlC,CAAwCC,IAAD,IAASX,QAAQ,CAACW,IAAD,CAAxD;AACH,GAFQ,EAEP,EAFO,CAAT;AAID,sBACG;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,SAAS,EAAET,KAAK,CAACK,OAAN,GAAc,IAAd,GAAmB,KAAxC;AAA+C,UAAA,OAAO,EAAEL,KAAK,CAACK,OAA9D;AAAuE,UAAA,IAAI,EAAEL,KAAK,CAACI;AAAnF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,kCACC,QAAC,SAAD;AAAW,YAAA,EAAE,EAAEL,MAAM,CAACQ,EAAtB;AAA0B,YAAA,KAAK,EAAEV,KAAjC;AAAwC,YAAA,WAAW,EAAEK;AAArD;AAAA;AAAA;AAAA;AAAA,kBADD,eAEE,QAAC,WAAD;AAAa,YAAA,EAAE,EAAEH,MAAM,CAACQ,EAAxB;AAA4B,YAAA,KAAK,EAAEV,KAAnC;AAA0C,YAAA,WAAW,EAAEK;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADH;AAaA;;GAhCQP,K;UAEQd,S;;;KAFRc,K;AAmCT,eAAeA,KAAf","sourcesContent":["import React , {useEffect, useState} from \"react\";\nimport BasicInfo from './info/BasicInfo';\nimport AddressInfo from './info/AddressInfo';\nimport {useLocation, useParams} from \"react-router-dom\";\nimport API from '../../helpers/api';\nimport AlertBox from '../../components/alerts/AlertBox';\n\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input\n  } from \"reactstrap\";\n\nfunction Rider(props){\n  const[rider, setRider] = useState('');\n  const params = useParams();\n  const [alert, setAlert] = useState({});\n\n  const toggleAlert=(msg, type)=>{\n    setAlert({\n      type: type,\n      message: msg\n    })\n    setTimeout(function() {\n        setAlert({})\n    }, 5000)\n  }\n\n  useEffect(()=> { \n      API(`riders/${params.id}`, \"GET\").then((data)=> setRider(data));\n  },[])\n\n\treturn(\n    <>\n      <div className=\"add-driver mt-3\">\n        <Container fluid>\n          <AlertBox showAlert={alert.message?true:false} message={alert.message} type={alert.type}/>\n          <Row>\n  \t        <BasicInfo id={params.id} rider={rider} toggleAlert={toggleAlert} />\n            <AddressInfo id={params.id} rider={rider} toggleAlert={toggleAlert} />\n          </Row>\n        </Container>\n      </div>\n    </>\n\t);\n}\n\n\nexport default Rider;\n"]},"metadata":{},"sourceType":"module"}