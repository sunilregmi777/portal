[{"/home/sunil/Karyathalo/admin-portal/src/index.js":"1","/home/sunil/Karyathalo/admin-portal/src/App.js":"2","/home/sunil/Karyathalo/admin-portal/src/store/index.js":"3","/home/sunil/Karyathalo/admin-portal/src/store/reducers.js":"4","/home/sunil/Karyathalo/admin-portal/src/store/sagas.js":"5","/home/sunil/Karyathalo/admin-portal/src/store/auth/login/reducer.js":"6","/home/sunil/Karyathalo/admin-portal/src/store/auth/login/saga.js":"7","/home/sunil/Karyathalo/admin-portal/src/store/auth/login/actionTypes.js":"8","/home/sunil/Karyathalo/admin-portal/src/store/auth/login/actions.js":"9","/home/sunil/Karyathalo/admin-portal/src/routes.js":"10","/home/sunil/Karyathalo/admin-portal/src/components/Error404.js":"11","/home/sunil/Karyathalo/admin-portal/src/pages/dashboard/Dashboard.js":"12","/home/sunil/Karyathalo/admin-portal/src/pages/login/Login.js":"13","/home/sunil/Karyathalo/admin-portal/src/components/sidebar/Sidebar.js":"14","/home/sunil/Karyathalo/admin-portal/src/components/Header/CardsHeader.js":"15","/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js":"16","/home/sunil/Karyathalo/admin-portal/src/pages/home/Home.js":"17","/home/sunil/Karyathalo/admin-portal/src/components/navbar/PageNavbar.js":"18","/home/sunil/Karyathalo/admin-portal/src/pages/driver/DriverList.js":"19","/home/sunil/Karyathalo/admin-portal/src/store/actions.js":"20","/home/sunil/Karyathalo/admin-portal/src/token.js":"21","/home/sunil/Karyathalo/admin-portal/src/store/driver/actions.js":"22","/home/sunil/Karyathalo/admin-portal/src/store/driver/saga.js":"23","/home/sunil/Karyathalo/admin-portal/src/helpers/api.js":"24","/home/sunil/Karyathalo/admin-portal/src/store/driver/reducer.js":"25","/home/sunil/Karyathalo/admin-portal/src/store/driver/actionTypes.js":"26","/home/sunil/Karyathalo/admin-portal/src/pages/driver/Driver.js":"27","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/Address.js":"28","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/BasicInfo.js":"29","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/VehicleInfo.js":"30","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/Documents.js":"31","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/LicenseInfo.js":"32","/home/sunil/Karyathalo/admin-portal/src/components/alerts/AlertBox.js":"33","/home/sunil/Karyathalo/admin-portal/src/components/alerts/AlertMessages.js":"34","/home/sunil/Karyathalo/admin-portal/src/components/alerts/ProgressProvider.js":"35","/home/sunil/Karyathalo/admin-portal/src/pages/rider/RiderList.js":"36","/home/sunil/Karyathalo/admin-portal/src/pages/rider/AddRider.js":"37","/home/sunil/Karyathalo/admin-portal/src/pages/rider/info/BasicInfo.js":"38","/home/sunil/Karyathalo/admin-portal/src/pages/rider/Rider.js":"39","/home/sunil/Karyathalo/admin-portal/src/pages/rider/info/AddressInfo.js":"40","/home/sunil/Karyathalo/admin-portal/src/components/Loading.js":"41"},{"size":970,"mtime":1618216252440,"results":"42","hashOfConfig":"43"},{"size":809,"mtime":1618215917856,"results":"44","hashOfConfig":"43"},{"size":505,"mtime":1615868930413,"results":"45","hashOfConfig":"43"},{"size":207,"mtime":1616143559417,"results":"46","hashOfConfig":"43"},{"size":370,"mtime":1616648912959,"results":"47","hashOfConfig":"43"},{"size":1315,"mtime":1616130272774,"results":"48","hashOfConfig":"43"},{"size":1103,"mtime":1616130542667,"results":"49","hashOfConfig":"43"},{"size":256,"mtime":1616128632301,"results":"50","hashOfConfig":"43"},{"size":670,"mtime":1616130505491,"results":"51","hashOfConfig":"43"},{"size":1595,"mtime":1618215822538,"results":"52","hashOfConfig":"43"},{"size":160,"mtime":1615955184578,"results":"53","hashOfConfig":"43"},{"size":185,"mtime":1616648912955,"results":"54","hashOfConfig":"43"},{"size":3781,"mtime":1616126469814,"results":"55","hashOfConfig":"43"},{"size":6411,"mtime":1618215675472,"results":"56","hashOfConfig":"43"},{"size":8058,"mtime":1616729270749,"results":"57","hashOfConfig":"43"},{"size":407,"mtime":1618213712030,"results":"58","hashOfConfig":"43"},{"size":2664,"mtime":1618216427782,"results":"59","hashOfConfig":"43"},{"size":25110,"mtime":1616729288938,"results":"60","hashOfConfig":"43"},{"size":4220,"mtime":1618288074716,"results":"61","hashOfConfig":"43"},{"size":72,"mtime":1616143657526,"results":"62","hashOfConfig":"43"},{"size":211,"mtime":1616126469846,"results":"63","hashOfConfig":"43"},{"size":1811,"mtime":1616648912959,"results":"64","hashOfConfig":"43"},{"size":2294,"mtime":1616648912959,"results":"65","hashOfConfig":"43"},{"size":1052,"mtime":1616652239956,"results":"66","hashOfConfig":"43"},{"size":2855,"mtime":1616648912959,"results":"67","hashOfConfig":"43"},{"size":703,"mtime":1616648912959,"results":"68","hashOfConfig":"43"},{"size":1821,"mtime":1618133907104,"results":"69","hashOfConfig":"43"},{"size":8614,"mtime":1618138240929,"results":"70","hashOfConfig":"43"},{"size":8895,"mtime":1618213636237,"results":"71","hashOfConfig":"43"},{"size":9875,"mtime":1618137794723,"results":"72","hashOfConfig":"43"},{"size":5517,"mtime":1617188006712,"results":"73","hashOfConfig":"43"},{"size":5614,"mtime":1617349265312,"results":"74","hashOfConfig":"43"},{"size":1258,"mtime":1618128282618,"results":"75","hashOfConfig":"43"},{"size":318,"mtime":1617188654804,"results":"76","hashOfConfig":"43"},{"size":908,"mtime":1618131239165,"results":"77","hashOfConfig":"43"},{"size":3998,"mtime":1618205609472,"results":"78","hashOfConfig":"43"},{"size":405,"mtime":1618213851111,"results":"79","hashOfConfig":"43"},{"size":8863,"mtime":1618218938199,"results":"80","hashOfConfig":"43"},{"size":1318,"mtime":1618208624522,"results":"81","hashOfConfig":"43"},{"size":8546,"mtime":1618211748298,"results":"82","hashOfConfig":"43"},{"size":180,"mtime":1618222248417,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"f0xbuj",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sunil/Karyathalo/admin-portal/src/index.js",[],["185","186"],"/home/sunil/Karyathalo/admin-portal/src/App.js",["187"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport \"./App.css\";\nimport Login from './pages/login/Login';\nimport Home from './pages/home/Home';\nimport Error404 from './components/Error404';\nimport { connect } from 'react-redux';\nimport { loginSuccessful } from './store/actions'\n\nfunction App(props) {\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      props.loginSuccessful();\n    }\n  }, [])\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route from='/login' component={Login} />\n          <Route from='/' component={Home} />\n          <Route from='/404' component={Error404} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default connect(null, { loginSuccessful })(App);\n","/home/sunil/Karyathalo/admin-portal/src/store/index.js",[],"/home/sunil/Karyathalo/admin-portal/src/store/reducers.js",[],"/home/sunil/Karyathalo/admin-portal/src/store/sagas.js",[],"/home/sunil/Karyathalo/admin-portal/src/store/auth/login/reducer.js",[],"/home/sunil/Karyathalo/admin-portal/src/store/auth/login/saga.js",["188","189","190"],"import { fork, put, all, call, takeEvery } from 'redux-saga/effects'\n\nimport { loginError, loginSuccessful, logoutSuccessful } from './actions';\n\nimport { LOGIN ,LOGOUT} from './actionTypes'\n\nimport loginData from '../../../assets/login-info.json'\nimport token from '../../../token'\n\nfunction* login({ payload: { email, password, history } }) {\n    try {\n        //const response = yield call();\n\n            localStorage.setItem(\"token\", token);\n            yield put(loginSuccessful());\n            history.push(\"/dashboard\");\n        }\n    catch (error) {\n        yield put(loginError(error));\n    }\n}\n\nexport function* watchUserLogin() {\n    yield takeEvery(LOGIN, login);\n}\n\nexport function* loginSaga() {\n    yield all([fork(watchUserLogin)]);\n}\n\nfunction* logout({ history:  history }) {\n    console.log(\"i am here\")\n    //const response = yield call();\n    localStorage.clear();\n    yield put(logoutSuccessful());\n    history.push(\"/login\");\n}\n\nexport function* watchUserLogout() {\n    yield takeEvery(LOGOUT, logout);\n}\n\nexport function* logoutSaga() {\n    yield all([fork(watchUserLogout)]);\n}","/home/sunil/Karyathalo/admin-portal/src/store/auth/login/actionTypes.js",[],"/home/sunil/Karyathalo/admin-portal/src/store/auth/login/actions.js",[],"/home/sunil/Karyathalo/admin-portal/src/routes.js",[],"/home/sunil/Karyathalo/admin-portal/src/components/Error404.js",[],"/home/sunil/Karyathalo/admin-portal/src/pages/dashboard/Dashboard.js",[],"/home/sunil/Karyathalo/admin-portal/src/pages/login/Login.js",[],"/home/sunil/Karyathalo/admin-portal/src/components/sidebar/Sidebar.js",["191"],"import { useEffect, useState } from 'react';\n\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport classnames from \"classnames\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    Nav\n} from 'reactstrap';\n\nimport { useLocation } from 'react-router-dom'\n\n\nfunction Sidebar(props) {\n    const { routes, logo } = props;\n    const [routeCollapse, setRouteCollapse] = useState([]);\n    const location = useLocation();\n\n    let navbarBrandProps;\n\n    useEffect(() => {\n        setCollapseState();\n    }, [])\n\n    const setCollapseState = () => {\n\n        let initialRoutes = [];\n        routes.forEach(route => {\n            if (route.collapse) {\n                initialRoutes[route.state] = false;\n            }\n        });\n        setRouteCollapse(initialRoutes);\n    }\n\n    const toggleCollapse = (stateName) => {\n        let collapseArr = Object.assign([], routeCollapse);\n        collapseArr[stateName] = !collapseArr[stateName];\n        setRouteCollapse(collapseArr);\n    }\n\n\n    const activeRoute = routeName => {\n        return location.pathname.indexOf(routeName) > -1\n            ? 'active' : '';\n    };\n\n    const getCollapseInitialState = (routes) => {\n        for (let i = 0; i < routes.length; i++) {\n            if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\n                return true;\n            } else if (window.location.href.indexOf(routes[i].path) !== -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    const createLinks = routes => {\n        return routes.map((route, key) => {\n            if (route.redirect) return null;\n            if (route.collapse) {\n                return (\n                    <NavItem key={key}>\n                        <NavLink\n                            data-toggle=\"collapse\"\n                            aria-expanded={routeCollapse[route.state]}\n                            className={classnames({\n                                active: getCollapseInitialState(route.views)\n                            })}\n                            onClick={e => {\n                                e.preventDefault();\n                                toggleCollapse(route.state)\n                            }}>\n                            {route.icon ? (\n                                <>\n                                    <i className={route.icon} />\n                                    <span className=\"nav-link-text\">{route.name}</span>\n                                </>\n                            ) : null}\n                        </NavLink>\n                        <Collapse isOpen={routeCollapse[route.state]}>\n                            <Nav className=\"nav-sm flex-column\">\n                                {createLinks(route.views)}\n                            </Nav>\n                        </Collapse>\n                    </NavItem>\n                )\n            }\n            return (<NavItem\n                key={key}>\n                <NavLink to={route.path}\n                    className={activeRoute(route.path)}\n                    tag={NavLinkRRD}\n                >\n                    {route.icon ? (\n                        <>\n                            <i className={route.icon} />\n                            <span className=\"nav-link-text\">{route.name}</span>\n                        </>\n                    ) : route.miniName !== undefined ? (\n                        <>\n                            <span className=\"sidenav-mini-icon\"> {route.miniName} </span>\n                            <span className=\"sidenav-normal\"> {route.name} </span>\n                        </>\n                    ) : (\n                        route.name\n                    )}\n                </NavLink>\n            </NavItem>);\n        });\n    }\n\n    if (logo && logo.innerLink) {\n        navbarBrandProps = {\n            to: logo.innerLink,\n            tag: Link\n        };\n    } else if (logo && logo.outterLink) {\n        navbarBrandProps = {\n            href: logo.outterLink,\n            target: \"_blank\"\n        };\n    }\n\n    const scrollBarInnder = (\n        < div className=\"scrollbar-inner\" >\n            <div className=\"sidenav-header d-flex align-items-center\">\n                {logo ? (\n                    <NavbarBrand {...navbarBrandProps}>\n                        <img\n                            alt={logo.imgAlt}\n                            className=\"navbar-brand-img\"\n                            src={logo.imgSrc}\n                        />\n                    </NavbarBrand>\n                ) : null}\n                <div className=\"ml-auto\">\n                    <div className={classnames(\"sidenav-toggler d-none d-xl-block\", {\n                        active: props.sideNavOpen\n                    })}\n                        onClick={props.toggleSidenav}\n                    >\n                        <div className=\"sidenav-toggler-inner\">\n                            <i className=\"sidenav-toggler-line\" />\n                            <i className=\"sidenav-toggler-line\" />\n                            <i className=\"sidenav-toggler-line\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"navbar-inner\">\n                <Collapse navbar isOpen={true}>\n                    <Nav navbar>{createLinks(routes)}</Nav>\n                </Collapse>\n            </div>\n        </div >\n    );\n\n    const onMouseEnterSidenav = () => {\n        if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\n            document.body.classList.add(\"g-sidenav-show\");\n        }\n    };\n\n    const onMouseLeaveSidenav = () => {\n        if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\n            document.body.classList.remove(\"g-sidenav-show\");\n        }\n    };\n\n    return (\n        <Navbar\n            className=\n            \"sidenav navbar-vertical navbar-expand-xs navbar-white bg-dark fixed-left\"\n            onMouseEnter={onMouseEnterSidenav}\n            onMouseLeave={onMouseLeaveSidenav}\n        >\n            {\n                navigator.platform.indexOf(\"Win\") > -1 ? (\n                    <PerfectScrollbar>{scrollBarInnder}</PerfectScrollbar>\n                ) : (\n                    scrollBarInnder\n                )\n            }\n        </Navbar>\n    )\n}\n\nexport default Sidebar;\n","/home/sunil/Karyathalo/admin-portal/src/components/Header/CardsHeader.js",[],"/home/sunil/Karyathalo/admin-portal/src/pages/driver/AddDriver.js",[],"/home/sunil/Karyathalo/admin-portal/src/pages/home/Home.js",["192","193","194"],"\nimport { useState, useRef, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport PageNavbar from \"../../components/navbar/PageNavbar\";\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport routes from '../../routes';\nimport logo from \"../../assets/img/brand/argon-react.png\";\nimport Driver from \"../driver/Driver\";\nimport Rider from \"../rider/Rider\";\nimport RiderList from \"../rider/RiderList\";\n\n\n\nfunction Home(props) {\n    const [sideNavOpen, setSideNavOpen] = useState(true);\n\n    const mainContent = useRef();\n    const history = useHistory();\n\n    useEffect(() => {\n        // if (!props.isAuthenticated) {\n        //     history.push(\"/login\");\n        // }\n    }, [])\n\n    const toggleSidenav = e => {\n        if (document.body.classList.contains(\"g-sidenav-pinned\")) {\n            document.body.classList.remove(\"g-sidenav-pinned\");\n            document.body.classList.add(\"g-sidenav-hidden\");\n        } else {\n            document.body.classList.add(\"g-sidenav-pinned\");\n            document.body.classList.remove(\"g-sidenav-hidden\");\n        }\n        setSideNavOpen(!sideNavOpen)\n    };\n\n    const getRoutes = routes => {\n        return routes.map((route, key) => {\n            if (route.collapse) {\n                return getRoutes(route.views);\n            }\n            return (\n                <Route\n                    path={route.path}\n                    component={route.component}\n                    key={key}\n                />\n\n            );\n        });\n    };\n    return (\n        <>\n            <Sidebar\n                sideNavOpen={sideNavOpen}\n                toggleSidenav={toggleSidenav}\n                routes={routes}\n                logo={{\n                    innerLink: \"/\",\n                    imgSrc: logo,\n                    imgAlt: \"...\"\n                }} />\n            <div\n                className=\"main-content\"\n                ref={mainContent}>\n                <PageNavbar\n                    toggleSidenav={toggleSidenav}\n                    sidenavOpen={sideNavOpen} />\n                <Switch>\n                    {getRoutes(routes)}\n                    <Route from=\"/driver/:id\" component={Driver}/>\n                    <Route from=\"/rider/:id\" component={Rider}/>\n                </Switch>\n            </div>\n            {sideNavOpen ? (\n                <div className=\"backdrop d-xl-none\" onClick={toggleSidenav} />\n            ) : null}\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { isAuthenticated: state.login.isAuthenticated };\n};\n\nexport default connect(mapStateToProps)(Home);\n\n","/home/sunil/Karyathalo/admin-portal/src/components/navbar/PageNavbar.js",[],"/home/sunil/Karyathalo/admin-portal/src/pages/driver/DriverList.js",["195","196","197","198","199","200","201","202","203"],"/home/sunil/Karyathalo/admin-portal/src/store/actions.js",[],"/home/sunil/Karyathalo/admin-portal/src/token.js",[],"/home/sunil/Karyathalo/admin-portal/src/store/driver/actions.js",["204"],"import { ADD_DRIVER , ADD_DRIVER_SUCCESSFUL, ADD_DRIVER_FAILED, UPDATE_DRIVER,UPDATE_DRIVER_SUCCESSFUL,UPDATE_DRIVER_FAILED,\n    FETCH_DRIVER, FETCH_DRIVER_SUCCESSFUL , FETCH_DRIVER_FAILED, DELETE_DRIVER, DELETE_DRIVER_FAILED, DELETE_DRIVER_SUCCESSFUL, EDIT_MODE} from './actionTypes';\nimport driver from './reducer';\n\nexport const addDriver = (data, history) => {\n    return {\n        type: ADD_DRIVER,\n        payload: { data, history }\n    }\n}\nexport const addDriverSuccessful = (driver) => {\n    return {\n        type: ADD_DRIVER_SUCCESSFUL,\n        payload:driver\n    }\n}\n\nexport const addDriverFailed= () => {\n    return {\n        type: ADD_DRIVER_FAILED\n    }\n}\n\nexport const fetchDriver= () => {\n    return {\n        type: FETCH_DRIVER\n    }\n}\n\nexport const fetchDriverSuccessful = (data) => {\n    return {\n        type: FETCH_DRIVER_SUCCESSFUL,\n        data: data\n    }\n}\n\nexport const fetchDriverFailed= (error) => {\n    return {\n        type: FETCH_DRIVER_FAILED\n    }\n}\n\nexport const deleteDriver = (id, drivers) =>{\n    return{\n        type:DELETE_DRIVER,\n        payload:{id, drivers}\n    }\n}\n\nexport const deleteDriverSuccessful = (id, drivers) => {\n    return {\n        type: DELETE_DRIVER_SUCCESSFUL,\n        payload: {id, drivers}\n    }\n}\n\nexport const deleteDriverFailed= () => {\n    return {\n        type: DELETE_DRIVER_FAILED\n    }\n}\n\nexport const switchEditMode = () => {\n    return {\n        type: EDIT_MODE\n    }\n}\n\nexport const updateDriver = (id, drivers) =>{\n    return{\n        type:UPDATE_DRIVER,\n        payload:{id, drivers}\n    }\n}\n\nexport const updateDriverSuccessful = (id, drivers) => {\n    return {\n        type: UPDATE_DRIVER_SUCCESSFUL,\n        payload: {id, drivers}\n    }\n}\n\nexport const updateDriverFailed= () => {\n    return {\n        type: UPDATE_DRIVER_FAILED\n    }\n}","/home/sunil/Karyathalo/admin-portal/src/store/driver/saga.js",["205","206","207","208","209","210","211"],"import { fork, put, all, call, takeEvery } from 'redux-saga/effects'\n\nimport { addDriverSuccessful, fetchDriverSuccessful ,fetchDriverFailed, addDriverFailed, deleteDriverSuccessful,\n deleteDriverFailed, updateDriverSuccessful, updateDriverFailed} from './actions';\n\nimport { ADD_DRIVER, FETCH_DRIVER, DELETE_DRIVER, DELETE_DRIVER_SUCCESSFUL,UPDATE_DRIVER, UPDATE_DRIVER_SUCCESSFUL  } from './actionTypes';\nimport API from '../../helpers/api';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction* addDriver( {payload} ) {\n    try {\n        const data = yield call(API, \"drivers\", \"post\", payload.data);\n            // yield put(addDriverSuccessful(data));\n            payload.history.push('/driver-list');\n        }\n    catch (error) {\n        yield put(addDriverFailed(error));\n    }\n}\n\nexport function* watchAddDriver() {\n    yield takeEvery(ADD_DRIVER, addDriver);\n}\n\nexport function* addDriverSaga() {\n    yield all([fork(watchAddDriver)]);\n}\n\nfunction* fetchDriver() {\n    try {\n        const data = yield call(API, \"drivers\", \"get\");\n            yield put(fetchDriverSuccessful(data));\n    }\n    catch (error) {\n        console.log(error)\n        yield put(fetchDriverFailed(error));\n    }\n}\n\nexport function* watchFetchDriver() {\n    yield takeEvery(FETCH_DRIVER, fetchDriver);\n}\n\n\nexport function* fetchDriverSaga() {\n    yield all([fork(watchFetchDriver)]);\n}\n\nfunction* deleteDriver({type, payload}) {\n    try {\n        yield call(API, `drivers/${payload.id}`, \"delete\");\n        yield put(deleteDriverSuccessful(payload.id, payload.drivers))\n        }\n    catch (error) {\n        yield put(deleteDriverFailed(error));\n    }\n}\n\nexport function* watchDeleteDriver() {\n    yield takeEvery(DELETE_DRIVER, deleteDriver);\n}\n\nexport function* deleteDriverSaga() {\n    yield all([fork(watchDeleteDriver)]);\n}\n\nfunction* updateDriver({type, payload}) {\n    try {\n        // yield call(API, `drivers/${payload.id}`, \"delete\");\n        // yield put(updateDriverSuccessful(payload.id, payload.drivers))\n        }\n    catch (error) {\n        yield put(updateDriverFailed(error));\n    }\n}\n\nexport function* watchUpdateDriver() {\n    yield takeEvery(UPDATE_DRIVER, updateDriver);\n}\n\nexport function* updateDriverSaga() {\n    yield all([fork(watchUpdateDriver)]);\n}\n","/home/sunil/Karyathalo/admin-portal/src/helpers/api.js",[],"/home/sunil/Karyathalo/admin-portal/src/store/driver/reducer.js",["212","213"],"import { ADD_DRIVER, ADD_DRIVER_SUCCESSFUL, ADD_DRIVER_FAILED, FETCH_DRIVER, FETCH_DRIVER_SUCCESSFUL, DELETE_DRIVER_SUCCESSFUL,\n    FETCH_DRIVER_FAILED, DELETE_DRIVER, UPDATE_DRIVER, UPDATE_DRIVER_SUCCESSFUL, EDIT_MODE } from \"./actionTypes\";\n\nconst initialState = {\n    loading: null, errorMessage: null, drivers:null, editMode:false\n}\n\nconst driver = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_DRIVER:\n            state = {\n                ...state,\n                loading:true,\n                isAuthenticated: true,\n            }\n            break;\n        case ADD_DRIVER_SUCCESSFUL:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                // drivers:action.data\n            }\n            break;\n        case ADD_DRIVER_FAILED:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null\n            }\n            break;\n        case FETCH_DRIVER:\n            state = {\n                ...state,\n                loading: true,\n                errorMessage: null\n            }\n            break;\n        case FETCH_DRIVER_SUCCESSFUL:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                drivers:action.data\n            }\n            break;\n        case FETCH_DRIVER_FAILED:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null\n            }\n            break;\n        case DELETE_DRIVER_SUCCESSFUL:\n            state = {\n                loading: false,\n                errorMessage: null,\n                drivers: action.payload.drivers.filter((item) => item.id != action.payload.id)\n            }\n            break;\n        case DELETE_DRIVER:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                drivers:action.data\n            }\n            break;\n        case EDIT_MODE:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                editMode:!state.editMode\n            }\n            break;\n        \n        case UPDATE_DRIVER:\n            state = {\n                ...state,\n                loading: false,\n                errorMessage: null,\n                drivers:action.data\n            }\n            break;\n        case UPDATE_DRIVER_SUCCESSFUL:\n            state = {\n                loading: false,\n                errorMessage: null,\n                drivers: action.payload.drivers.filter((item) => item.id != action.payload.id)\n            }\n            break;\n        default:\n            state = { ...state };\n            break;\n    }\n    return state;\n}\nexport default driver;","/home/sunil/Karyathalo/admin-portal/src/store/driver/actionTypes.js",[],"/home/sunil/Karyathalo/admin-portal/src/pages/driver/Driver.js",["214","215","216","217","218","219","220","221","222","223","224"],"import React , {useEffect, useState} from \"react\";\nimport AddDriver from './AddDriver';\nimport Address from './info/Address';\nimport BasicInfo from './info/BasicInfo';\nimport VehicleInfo from './info/VehicleInfo';\nimport LicenseInfo from './info/LicenseInfo';\nimport Documents from './info/Documents';\nimport {useLocation, useParams} from \"react-router-dom\";\nimport API from '../../helpers/api';\nimport AlertBox from '../../components/alerts/AlertBox';\n\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input\n  } from \"reactstrap\";\n\nfunction Driver(props){\n  const[driver, setDriver] = useState('');\n  const params = useParams();\n  const [alert, setAlert] = useState({});\n\n  const toggleAlert=(msg, type)=>{\n    setAlert({\n      type: type,\n      message: msg\n    })\n    setTimeout(function() {\n        setAlert({})\n    }, 5000)\n  }\n\n  useEffect(()=> { \n      API(`drivers/${params.id}`, \"GET\").then((data)=> setDriver(data));\n  },[])\n\n\treturn(\n    <>\n      <div className=\"add-driver mt-3\">\n        <Container fluid>\n          <AlertBox showAlert={alert.message?true:false} message={alert.message} type={alert.type}/>\n          <Row>\n  \t        <BasicInfo id={params.id} driver={driver} toggleAlert={toggleAlert} />\n            <Address id={params.id} driver={driver} toggleAlert={toggleAlert} />\n          </Row>\n          <Row>\n            <VehicleInfo id={params.id} driver={driver} toggleAlert={toggleAlert} />\n            <Col lg=\"6\">\n              <LicenseInfo id={params.id} driver={driver} toggleAlert={toggleAlert} />\n              <Documents id={params.id} driver={driver} toggleAlert={toggleAlert} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n\t);\n}\n\n\nexport default Driver;\n","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/Address.js",["225","226","227","228","229","230","231","232","233"],"import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState} from 'react';\nimport _ from \"lodash/fp\";\nimport '../driver.scss';\nimport { connect } from \"react-redux\";\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as alertMessage from '../../../components/alerts/AlertMessages';\n\n\nconst AddDriverAddressSchema = yup.object().shape({\n  address: yup.string().required(),\n  city: yup.string().required(),\n  country: yup.string().required(),\n  state: yup.string()\n    .required()\n    .matches(/^[0-9]+$/)\n    .min(1)\n    .max(2)\n});\n\n  function AddDriverAddress(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(AddDriverAddressSchema)\n    });\n    const[editMode, setEditMode] = useState(false);\n    const history = useHistory();\n\n    const editHandler = () =>{\n        setEditMode (!editMode);\n    }\n\n    const OnSubmit = async (data)  => {\n        const newData = {...props.driver, address: data}\n        const response = await API(`drivers/${props.id}`, 'PUT', newData);\n        props.toggleAlert(\"Driver's Address updated successfully\",alertMessage.SUCCESS);\n        setEditMode(false)\n    }\n\n    useEffect(()=>{\n        console.log(props.driver.address)\n        if(props.driver.address==null){\n            setEditMode(true)\n        }\n        else setEditMode(false)\n    },[props.driver])\n\n    return(\n        <>\n            <Col lg=\"6\">\n                <Card>\n                    <CardHeader>\n                        <h3 className=\"mb-0\">Driver Address</h3>\n                        { props.driver && !editMode ?\n                                <div className=\"\">\n                                  <Button\n                                    onClick={editHandler}\n                                    className=\"btn btn-warning\"\n                                  >\n                                    Edit Address\n                                </Button>\n                            </div>\n                            :null\n                        }\n                    </CardHeader>\n                    <CardBody>\n                        <form onSubmit={handleSubmit(OnSubmit)}>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"address\"\n                                    >\n                                    Address\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"address\"\n                                        className={errors.address?\"is-invalid\":\"\"}\n                                        placeholder=\"Address\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.driver && props.driver.address!=null?props.driver.address.address:null }\n                                        disabled={props.driver?!editMode: editMode}\n                                    />\n                                    {errors.address && <div className=\"invalid-feedback\">{errors.address.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            \n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"city\"\n                                    >\n                                    City\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"city\"\n                                        className={errors.city?\"is-invalid\":\"\"}\n                                        placeholder=\"City\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.driver && props.driver.address!=null?props.driver.address.city:null }\n                                        disabled={props.driver?!editMode: editMode}\n                                    />\n                                    {errors.city && <div className=\"invalid-feedback\">{errors.city.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"state\"\n                                    >\n                                    State\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"state\"\n                                        className={errors.state?\"is-invalid\":\"\"}\n                                        placeholder=\"State\"\n                                        type=\"number\"\n                                        innerRef={register}\n                                        defaultValue ={props.driver && props.driver.address!=null?props.driver.address.state:null }\n                                        disabled={props.driver?!editMode: editMode}\n                                    />\n                                    {errors.state && <div className=\"invalid-feedback\">{errors.state.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"country\"\n                                    >\n                                    Country\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"country\"\n                                        className={errors.country?\"is-invalid\":\"\"}\n                                        placeholder=\"Country\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.driver && props.driver.address!=null?props.driver.address.country:null }\n                                        disabled={props.driver?!editMode: editMode}\n                                    />\n                                    {errors.country && <div className=\"invalid-feedback\">{errors.country.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            { !props.driver.address ?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                    </Col>\n                                </Row>:\n                                editMode?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Update</Button>\n                                    </Col>\n                                </Row>:null\n                            }\n                        </form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default AddDriverAddress;","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/BasicInfo.js",["234","235","236","237","238","239","240","241","242","243"],"import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState, useRef} from 'react';\nimport _ from \"lodash/fp\";\nimport '../driver.scss';\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as alertMessage from '../../../components/alerts/AlertMessages';\nimport AlertBox from '../../../components/alerts/AlertBox';\n\n\nconst AddDriverSchema = yup.object().shape({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  email: yup.string().email().required(),\n  mobile: yup.string()\n    .required()\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10)\n    .max(10)\n});\n\n\n  function AddDriver(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(AddDriverSchema)\n    });\n    const history = useHistory();\n    const formRef = useRef();\n    const[editMode, setEditMode]=useState(false);\n    const[alert, setAlert]=useState({});\n\n    const OnSubmit = async (data)  => {\n        {props.id ? await API(`drivers/${props.id}`, 'PUT', data) : await API('drivers', 'POST', data)}\n        // history.push('/driver-list');\n        {props.id ? props.toggleAlert(`${data.firstName}'s BasicInfo updated successfully`,alertMessage.SUCCESS)\n            :setAlert({type:alertMessage.SUCCESS, message:\"Driver Created Successfully\"})\n            setTimeout(function() {\n                setAlert({})\n            }, 5000)\n        }\n        formRef.current.reset();\n    }\n    const editHandler = () =>{\n        setEditMode (!editMode);\n    }\n\n    return(\n        <>\n            {!props.id && <Col lg=\"12\"><AlertBox showAlert={alert.message?true:false} message={alert.message} type={alert.type}/></Col>}\n            <Col lg=\"6\">\n                <Card>\n                    <CardHeader>\n                        <h3 className=\"mb-0\">Basic Info</h3>\n                        { props.driver && !editMode ?\n                                <div className=\"\">\n                                  <Button\n                                    onClick={editHandler}\n                                    className=\"btn btn-warning\"\n                                  >\n                                    Edit BasicInfo\n                                </Button>\n                            </div>\n                            :null\n                        }\n                    </CardHeader>\n                    <CardBody>\n                        <form onSubmit={handleSubmit(OnSubmit)} ref={formRef}>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"firstName\"\n                                    >\n                                    First Name\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"firstName\"\n                                        className={errors.firstName?\"is-invalid\":\"\"}\n                                        placeholder=\"First Name\"\n                                        type=\"text\" \n                                        defaultValue={props.driver && props.driver.firstName?props.driver.firstName:null}\n                                        disabled={props.driver?!editMode: editMode}                                             \n                                        innerRef={register}\n                                    />\n                                    {errors.firstName && <div className=\"invalid-feedback\">{errors.firstName.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"lastName\"\n                                    >\n                                    Last Name\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"lastName\"\n                                        className={errors.lastName?\"is-invalid\":\"\"}\n                                        placeholder=\"Last Name\"\n                                        type=\"text\"\n                                        defaultValue={props.driver && props.driver.lastName?props.driver.lastName:null}\n                                        disabled={props.driver?!editMode: editMode}\n                                        innerRef={register}\n                                    />\n                                   {errors.lastName && <div className=\"invalid-feedback\">{errors.lastName.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"email\"\n                                    >\n                                    Email\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"email\"\n                                        className={errors.email?\"is-invalid\":\"\"}\n                                        placeholder=\"Email\"\n                                        type=\"email\"\n                                        defaultValue={props.driver && props.driver.email?props.driver.email:null}\n                                        disabled={props.driver?!editMode: editMode} \n                                        innerRef={register}\n                                    />\n                                    {errors.email && <div className=\"invalid-feedback\">{errors.email.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"mobile\"\n                                    >\n                                    Mobile\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"mobile\"\n                                        className={errors.mobile?\"is-invalid\":\"\"}\n                                        placeholder=\"Phone No\"\n                                        type=\"number\"\n                                        defaultValue={props.driver && props.driver.mobile?props.driver.mobile:null}\n                                        disabled={props.driver?!editMode: editMode}\n                                        innerRef={register}\n                                    />\n                                    {errors.mobile && <div className=\"invalid-feedback\">{errors.mobile.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            { !props.driver ?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                    </Col>\n                                </Row>:\n                                editMode?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Update</Button>\n                                    </Col>\n                                </Row>:null\n                            }\n                        </form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default AddDriver;","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/VehicleInfo.js",["244","245","246","247","248","249","250","251","252"],"import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState} from 'react';\nimport _ from \"lodash/fp\";\nimport '../driver.scss';\nimport { connect } from \"react-redux\";\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as alertMessage from '../../../components/alerts/AlertMessages';\n\n\nconst AddDriverVehicleSchema = yup.object().shape({\n  numberPlate: yup.string().required(),\n  make: yup.string().required(),\n  modal: yup.string().required(),\n  year:yup.date().required(),\n  color:yup.string().required()\n});\n\n  function AddDriverAddress(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(AddDriverVehicleSchema)\n    });\n    const[editMode, setEditMode] = useState(false);\n    const history = useHistory();\n\n    const editHandler = () =>{\n        setEditMode (!editMode);\n    }\n\n    const OnSubmit = async (data)  => {\n        const newData = {...props.driver, vehicleInfo: data}\n        const response = await API(`drivers/${props.id}`, 'PUT', newData);\n        props.toggleAlert(\"Driver's Vehicle info updated successfully\",alertMessage.SUCCESS);\n        setEditMode(false)\n    }\n\n    useEffect(()=>{\n        if(props.driver.vehicleInfo==null){\n            setEditMode(true)\n        }\n        else setEditMode(false)\n    },[props.driver])\n\n    return(\n        <>\n            <Col lg=\"6\">\n                <Card>\n                    <CardHeader>\n                        <h3 className=\"mb-0\">Drivers Vehicle Info</h3>\n                        { props.driver && !editMode ?\n                                <div className=\"\">\n                                  <Button\n                                    onClick={editHandler}\n                                    className=\"btn btn-warning\"\n                                  >\n                                    Edit VehicleInfo\n                                </Button>\n                            </div>\n                            :null\n                        }\n                    </CardHeader>\n                    <CardBody>\n                        <form onSubmit={handleSubmit(OnSubmit)}>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"numberPlate\"\n                                    >\n                                    Number Plate\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"numberPlate\"\n                                        className={errors.numberPlate?\"is-invalid\":\"\"}\n                                        placeholder=\"Number Plate\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue={props.driver && props.driver.vehicleInfo!=null?props.driver.vehicleInfo.numberPlate:null}\n                                        disabled={props.driver?!editMode:editMode}\n                                    />\n                                    {errors.numberPlate && <div className=\"invalid-feedback\">{errors.numberPlate.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"make\"\n                                    >\n                                    Make\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"make\"\n                                        className={errors.make?\"is-invalid\":\"\"}\n                                        placeholder=\"Make\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue={props.driver && props.driver.vehicleInfo!=null?props.driver.vehicleInfo.make:null}\n                                        disabled={props.driver?!editMode:editMode}\n                                    />\n                                    {errors.make && <div className=\"invalid-feedback\">{errors.make.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"modal\"\n                                    >\n                                    Modal\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"modal\"\n                                        className={errors.modal?\"is-invalid\":\"\"}\n                                        placeholder=\"Modal\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue={props.driver && props.driver.vehicleInfo!=null?props.driver.vehicleInfo.modal:null}\n                                        disabled={props.driver?!editMode:editMode}\n                                    />\n                                    {errors.modal && <div className=\"invalid-feedback\">{errors.modal.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"year\"\n                                    >\n                                    Year\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"year\"\n                                        className={errors.year?\"is-invalid\":\"\"}\n                                        placeholder=\"Year\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue={props.driver && props.driver.vehicleInfo!=null?props.driver.vehicleInfo.year:null}\n                                        disabled={props.driver?!editMode:editMode}\n                                    />\n                                    {errors.year && <div className=\"invalid-feedback\">{errors.year.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"color\"\n                                    >\n                                    Color\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"color\"\n                                        className={errors.color?\"is-invalid\":\"\"}\n                                        placeholder=\"Color\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue={props.driver && props.driver.vehicleInfo!=null?props.driver.vehicleInfo.color:null}\n                                        disabled={props.driver?!editMode:editMode}\n                                    />\n                                    {errors.color && <div className=\"invalid-feedback\">{errors.color.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            { !props.driver.vehicleInfo?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                    </Col>\n                                </Row>:\n                                editMode?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Update</Button>\n                                    </Col>\n                                </Row>:null\n                            }\n                        </form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default AddDriverAddress;","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/Documents.js",["253","254","255","256","257","258","259"],"import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState} from 'react';\nimport _ from \"lodash/fp\";\nimport '../driver.scss';\nimport { connect } from \"react-redux\";\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n\nconst AddDriverDocumentsSchema = yup.object().shape({\n  licenceNumber: yup.string().required(),\n  expiryDate: yup.date().required(),\n});\n\n  function AddDriverDocuments(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(AddDriverDocumentsSchema)\n    });\n    const history = useHistory();\n    const[editMode, setEditMode]=useState(false);\n\n    const editHandler = () =>{\n        setEditMode(!editMode)\n    }\n    const OnSubmit = async (data)  => {\n        const newData = {...props.driver, documents:data}\n        const response = await API(`drivers/${props.id}`, 'PUT', newData);\n        if(response.id){\n            history.push('/driver-list');\n        }\n    }\n\n    useEffect(()=>{\n        console.log(props.driver.documents)\n        if(props.driver.documents==null){\n            setEditMode(true)\n        }\n        else setEditMode(false)\n    },[props.driver])\n\n    return(\n        <>\n            <Card>\n                <CardHeader>\n                    <h3 className=\"mb-0\">Driver Documents</h3>\n                    { props.driver && !editMode ?\n                            <div className=\"\">\n                              <Button\n                                onClick={editHandler}\n                                className=\"btn btn-warning\"\n                              >\n                                Edit LicenseInfo\n                            </Button>\n                        </div>\n                        :null\n                    }\n                </CardHeader>\n                <CardBody>\n                    <form onSubmit={handleSubmit(OnSubmit)}>\n                        <FormGroup className=\"row\">\n                            <Col md=\"3\">\n                                <Label\n                                    className=\"form-control-label col-form-label\"\n                                    htmlFor=\"licenceNumber\"\n                                >\n                                Drivers Photo\n                                </Label>\n                            </Col>\n                            <Col md=\"9\">\n                                <Input\n                                    name=\"licenceNumber\"\n                                    className={errors.licenceNumber?\"is-invalid\":\"\"}\n                                    placeholder=\"License Number\"\n                                    type=\"text\"\n                                    innerRef={register}\n                                    defaultValue={props.driver && props.driver.documents!=null?props.driver.documents.licenceNumber:null}\n                                    disabled={props.driver?!editMode:editMode}\n                                />\n                                {errors.licenceNumber && <div className=\"invalid-feedback\">{errors.licenceNumber.message}</div>}\n                            </Col>\n                        </FormGroup>\n                        <FormGroup className=\"row\">\n                            <Col md=\"3\">\n                                <Label\n                                    className=\"form-control-label col-form-label\"\n                                    htmlFor=\"expiryDate\"\n                                >\n                                Driver Licence\n                                </Label>\n                            </Col>\n                            <Col md=\"9\">\n                                <Input\n                                    name=\"expiryDate\"\n                                    className={errors.expiryDate?\"is-invalid\":\"\"}\n                                    placeholder=\"Expiry Date\"\n                                    type=\"text\"\n                                    innerRef={register}\n                                    defaultValue={props.driver && props.driver.documents!=null?props.driver.documents.expiryDate:null}\n                                    disabled={props.driver?!editMode:editMode}\n                                />\n                                {errors.expiryDate && <div className=\"invalid-feedback\">{errors.expiryDate.message}</div>}\n                            </Col>\n                        </FormGroup>\n                        { !props.driver.documents ?\n                            <Row className=\"float-right\">\n                                <Col>\n                                    <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                </Col>\n                            </Row>:\n                            editMode?\n                            <Row className=\"float-right\">\n                                <Col>\n                                    <Button type=\"submit\" className=\"btn-info\">Update</Button>\n                                </Col>\n                            </Row>:null\n                        }\n                    </form>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AddDriverDocuments;","/home/sunil/Karyathalo/admin-portal/src/pages/driver/info/LicenseInfo.js",["260","261","262","263","264","265","266","267","268"],"import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState} from 'react';\nimport _ from \"lodash/fp\";\nimport '../driver.scss';\nimport { connect } from \"react-redux\";\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as alertMessage from '../../../components/alerts/AlertMessages';\n\nconst AddDriverLicenseSchema = yup.object().shape({\n  licenceNumber: yup.string().required(),\n  expiryDate: yup.date().required()\n});\n\n  function AddDriverLicense(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(AddDriverLicenseSchema)\n    });\n    const history = useHistory();\n    const [editMode, setEditMode] = useState(false);\n\n    const editHandler = () => {\n        setEditMode(!editMode);\n    }\n    const OnSubmit = async (data)  => {\n        const newData = {...props.driver, licenseInfo: data }\n        const response = await API(`drivers/${props.id}`, 'PUT', newData);\n        props.toggleAlert(\"Driver's license info updated successfully\",alertMessage.SUCCESS);\n    }\n\n    useEffect(()=>{\n        console.log(props.driver.licenseInfo)\n        if(props.driver.licenseInfo==null){\n            setEditMode(true)\n        }\n        else setEditMode(false)\n    },[props.driver])\n\n    return(\n        <>\n            <Card>\n                <CardHeader>\n                    <h3 className=\"mb-0\">License Info</h3>\n                    { props.driver && !editMode ?\n                            <div className=\"\">\n                              <Button\n                                onClick={editHandler}\n                                className=\"btn btn-warning\"\n                              >\n                                Edit LicenseInfo\n                            </Button>\n                        </div>\n                        :null\n                    }\n                </CardHeader>\n                <CardBody>\n                    <form onSubmit={handleSubmit(OnSubmit)}>\n                        <FormGroup className=\"row\">\n                            <Col md=\"3\">\n                                <Label\n                                    className=\"form-control-label col-form-label\"\n                                    htmlFor=\"licenceNumber\"\n                                >\n                                License Number\n                                </Label>\n                            </Col>\n                            <Col md=\"9\">\n                                <Input\n                                    name=\"licenceNumber\"\n                                    className={errors.licenceNumber?\"is-invalid\":\"\"}\n                                    placeholder=\"License Number\"\n                                    type=\"text\"\n                                    innerRef={register}\n                                    defaultValue={props.driver && props.driver.licenseInfo!=null?props.driver.licenseInfo.licenceNumber:null}\n                                    disabled={props.driver?!editMode:editMode}\n                                />\n                                {errors.licenceNumber && <div className=\"invalid-feedback\">{errors.licenceNumber.message}</div>}\n                            </Col>\n                        </FormGroup>\n                        <FormGroup className=\"row\">\n                            <Col md=\"3\">\n                                <Label\n                                    className=\"form-control-label col-form-label\"\n                                    htmlFor=\"expiryDate\"\n                                >\n                                Expiry Date\n                                </Label>\n                            </Col>\n                            <Col md=\"9\">\n                                <Input\n                                    name=\"expiryDate\"\n                                    className={errors.expiryDate?\"is-invalid\":\"\"}\n                                    placeholder=\"Expiry Date\"\n                                    type=\"text\"\n                                    innerRef={register}\n                                    defaultValue={props.driver && props.driver.licenseInfo!=null?props.driver.licenseInfo.expiryDate:null}\n                                    disabled={props.driver?!editMode:editMode}\n                                />\n                                {errors.expiryDate && <div className=\"invalid-feedback\">{errors.expiryDate.message}</div>}\n                            </Col>\n                        </FormGroup>\n                       { !props.driver.licenseInfo ?\n                            <Row className=\"float-right\">\n                                <Col>\n                                    <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                </Col>\n                            </Row>:\n                            editMode?\n                            <Row className=\"float-right\">\n                                <Col>\n                                    <Button type=\"submit\" className=\"btn-info\">Update</Button>\n                                </Col>\n                            </Row>:null\n                        }\n                    </form>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AddDriverLicense;","/home/sunil/Karyathalo/admin-portal/src/components/alerts/AlertBox.js",["269","270","271"],"import React, { useState } from 'react';\nimport { Alert, Spinner} from 'reactstrap';\nimport * as alertMessage from './AlertMessages';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport ProgressProvider from './ProgressProvider';\nfunction AlertBox(props){\n  \tconst percentage = 0;\n\tconst onDismiss = () => props.closeAlert();\n\tconst parseColor=()=>{\n\t\tswitch (props.type) {\n\t        case alertMessage.SUCCESS:\n\t           return \"success\";\n\t        case alertMessage.ERROR:\n\t            return \"danger\";\n\t        case alertMessage.INFO:\n\t            return \"info\";\n\t        case alertMessage.WARNING:\n\t            return \"warning\";\n\t        default: return \"info\";\n\t      }\n\t}\n\n\treturn (\n        <Alert color={parseColor()} isOpen={props.showAlert} toggle={onDismiss} >\n           <ProgressProvider values={[0, 20, 40, 60, 80, 100]}>\n\t\t        {percentage => (\n\t\t          <CircularProgressbar\n\t\t            value={percentage}\n\t\t            styles={buildStyles({\n\t\t              pathTransitionDuration: 0.15\n\t\t            })}\n\t\t          />\n\t\t        )}\n\t\t     </ProgressProvider>\n\t      <strong>{props.message}</strong> \n\t    </Alert>\n    );\n\n}\n\nexport default AlertBox;","/home/sunil/Karyathalo/admin-portal/src/components/alerts/AlertMessages.js",[],"/home/sunil/Karyathalo/admin-portal/src/components/alerts/ProgressProvider.js",[],"/home/sunil/Karyathalo/admin-portal/src/pages/rider/RiderList.js",["272","273","274","275","276","277","278","279"],"import React, { useState, useEffect} from 'react';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { Row, Col,Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardHeader, CardBody\n } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './rider.scss';\nimport { connect } from \"react-redux\";\nimport { fetchDriver, deleteDriver, updateDriver } from '../../store/actions';\nimport API from \"../../helpers/api\";\nimport AlertBox from '../../components/alerts/AlertBox';\nimport * as alertMessage from '../../components/alerts/AlertMessages';\n\nfunction RiderList(props) {\n  const [data, setData] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [riders, setRiders] = useState([]);\n  const [rider, setRider] = useState([]);\n  const [alert, setAlert] = useState({});\n\n    useEffect(() => {\n      const getAllRiders = async () => {\n        const allRiders = await retriveRiders();\n        if(allRiders) setRiders(allRiders);\n      }\n      getAllRiders();\n  },[]);\n\n  //retrive all riders\n  const retriveRiders = async () => {\n    const response = await API('riders','GET');\n    return response;\n  }\n  const handleDelete =  (event, rider ) => {\n      setRider(rider);\n      setModalShow(true);\n  }\n  const handleClose = () => {\n    setRider(null)\n    setModalShow(false);\n  }\n  const handleDeleteRider = async (event) =>{\n    await API(`riders/${rider.id}`,'DELETE');\n    setRiders(riders.filter((rid)=>rid.id!=rider.id));\n\n    setAlert({\n      type: alertMessage.WARNING,\n      message: 'Rider Deleted Successfully'\n    })\n        setModalShow(false);\n\n    setTimeout(function() {\n        setAlert({})\n    }, 5000)\n  }\n\n  const closeAlert = ()=>{\n    setAlert({});\n  }\n\n  const toggle = () => setModalShow(!modalShow);\n  let newList = [];\n  if (riders){\n       newList = riders.map(rider => {\n        return Object.assign(rider, {\n            action: \n            <>\n              <Link to={{pathname:`rider/${rider.id}`}}><button className=\"btn btn-info mr-2\">View</button></Link>\n              <button className=\"btn btn-danger\"  onClick={(event) => handleDelete(event, rider)}>Delete</button>\n            </>\n        });\n    });\n  }\n\n  const newData={\n    columns: [\n      {\n        label: 'First Name',\n        field: 'firstName',\n        width: 100,\n      },\n      {\n        label: 'Last Name',\n        field: 'lastName',\n        width: 100,\n      },\n      {\n        label: 'Email',\n        field: 'email',\n        width: 100,\n      },\n      {\n        label: 'Mobile No.',\n        field: 'mobile',\n        width: 100,\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        width: 200,\n      },\n    ],\n    rows: newList\n  };\n\n    return(\n    <>\n      <div className=\"rider-list driver-list mt-3\">\n        <Container fluid>\n          <AlertBox showAlert={alert.message?true:false} message={alert.message} type={alert.type} closeAlert={closeAlert}/>\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <h3 className=\"mb-0\">Riders list</h3>\n                </CardHeader>\n                <CardBody>\n                  <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={20} pagesAmount={4} data={newData} searchTop searchBottom={false} />\n                  <Modal isOpen={modalShow} toggle={toggle} className=\"d\">\n                    <ModalHeader toggle={toggle}>Delete Driver</ModalHeader>\n                    <ModalBody>\n                      Are you sure to delete driver?\n                    </ModalBody>\n                    <ModalFooter>\n                      <Button className=\"btn-danger\" onClick={(event) => handleDeleteRider(event)}>Delete</Button>{' '}\n                      <Button className=\"btn-info\" onClick={toggle}>Cancel</Button>\n                    </ModalFooter>\n                  </Modal>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  )\n}\nexport default RiderList;","/home/sunil/Karyathalo/admin-portal/src/pages/rider/AddRider.js",[],"/home/sunil/Karyathalo/admin-portal/src/pages/rider/info/BasicInfo.js",["280","281","282","283","284","285","286","287","288","289"],"import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState, useRef} from 'react';\nimport _ from \"lodash/fp\";\nimport '../rider.scss';\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as alertMessage from '../../../components/alerts/AlertMessages';\nimport AlertBox from '../../../components/alerts/AlertBox';\n\n\nconst AddRiderSchema = yup.object().shape({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  email: yup.string().email().required(),\n  mobile: yup.string()\n    .required()\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10)\n    .max(10)\n});\n\n\n  function AddRider(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(AddRiderSchema)\n    });\n    const history = useHistory();\n    const formRef =useRef();\n    const[alert, setAlert]=useState({});\n    const[editMode, setEditMode]=useState(false);\n\n    const OnSubmit = async (data)  => {\n        {props.id ? await API(`riders/${props.id}`, 'PUT', data) : await API('riders', 'POST', data)}\n        // history.push('/rider-list');\n        {props.id ? props.toggleAlert(`${data.firstName}'s BasicInfo updated successfully`,alertMessage.SUCCESS)\n        :setAlert({type:alertMessage.SUCCESS, message:\"Rider Created Successfully\"})\n            setTimeout(function() {\n                setAlert({})\n            }, 5000)\n        }\n        formRef.current.reset();\n    }\n    const editHandler = () =>{\n        setEditMode (!editMode);\n    }\n\n    return(\n        <>\n            {!props.id && <Col lg=\"12\"><AlertBox showAlert={alert.message?true:false} message={alert.message} type={alert.type}/></Col>}\n            <Col lg=\"6\">\n                <Card>\n                    <CardHeader>\n                        <h3 className=\"mb-0\">Basic Info</h3>\n                        { props.rider && !editMode ?\n                                <div className=\"\">\n                                  <Button\n                                    onClick={editHandler}\n                                    className=\"btn btn-warning\"\n                                  >\n                                    Edit BasicInfo\n                                </Button>\n                            </div>\n                            :null\n                        }\n                    </CardHeader>\n                    <CardBody>\n                        <form onSubmit={handleSubmit(OnSubmit)} ref={formRef}>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"firstName\"\n                                    >\n                                    First Name\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"firstName\"\n                                        className={errors.firstName?\"is-invalid\":\"\"}\n                                        placeholder=\"First Name\"\n                                        type=\"text\" \n                                        defaultValue={props.rider && props.rider.firstName?props.rider.firstName:null}\n                                        disabled={props.rider?!editMode: editMode}                                             \n                                        innerRef={register}\n                                    />\n                                    {errors.firstName && <div className=\"invalid-feedback\">{errors.firstName.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"lastName\"\n                                    >\n                                    Last Name\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"lastName\"\n                                        className={errors.lastName?\"is-invalid\":\"\"}\n                                        placeholder=\"Last Name\"\n                                        type=\"text\"\n                                        defaultValue={props.rider && props.rider.lastName?props.rider.lastName:null}\n                                        disabled={props.rider?!editMode: editMode}\n                                        innerRef={register}\n                                    />\n                                   {errors.lastName && <div className=\"invalid-feedback\">{errors.lastName.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"email\"\n                                    >\n                                    Email\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"email\"\n                                        className={errors.email?\"is-invalid\":\"\"}\n                                        placeholder=\"Email\"\n                                        type=\"email\"\n                                        defaultValue={props.rider && props.rider.email?props.rider.email:null}\n                                        disabled={props.rider?!editMode: editMode} \n                                        innerRef={register}\n                                    />\n                                    {errors.email && <div className=\"invalid-feedback\">{errors.email.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"mobile\"\n                                    >\n                                    Mobile\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"mobile\"\n                                        className={errors.mobile?\"is-invalid\":\"\"}\n                                        placeholder=\"Phone No\"\n                                        type=\"number\"\n                                        defaultValue={props.rider && props.rider.mobile?props.rider.mobile:null}\n                                        disabled={props.rider?!editMode: editMode}\n                                        innerRef={register}\n                                    />\n                                    {errors.mobile && <div className=\"invalid-feedback\">{errors.mobile.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            { !props.rider ?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                    </Col>\n                                </Row>:\n                                editMode?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Update</Button>\n                                    </Col>\n                                </Row>:null\n                            }\n                        </form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default AddRider;","/home/sunil/Karyathalo/admin-portal/src/pages/rider/Rider.js",["290","291","292","293","294","295","296","297","298","299","300"],"import React , {useEffect, useState} from \"react\";\nimport BasicInfo from './info/BasicInfo';\nimport AddressInfo from './info/AddressInfo';\nimport {useLocation, useParams} from \"react-router-dom\";\nimport API from '../../helpers/api';\nimport AlertBox from '../../components/alerts/AlertBox';\n\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input\n  } from \"reactstrap\";\n\nfunction Rider(props){\n  const[rider, setRider] = useState('');\n  const params = useParams();\n  const [alert, setAlert] = useState({});\n\n  const toggleAlert=(msg, type)=>{\n    setAlert({\n      type: type,\n      message: msg\n    })\n    setTimeout(function() {\n        setAlert({})\n    }, 5000)\n  }\n\n  useEffect(()=> { \n      API(`riders/${params.id}`, \"GET\").then((data)=> setRider(data));\n  },[])\n\n\treturn(\n    <>\n      <div className=\"add-driver mt-3\">\n        <Container fluid>\n          <AlertBox showAlert={alert.message?true:false} message={alert.message} type={alert.type}/>\n          <Row>\n  \t        <BasicInfo id={params.id} rider={rider} toggleAlert={toggleAlert} />\n            <AddressInfo id={params.id} rider={rider} toggleAlert={toggleAlert} />\n          </Row>\n        </Container>\n      </div>\n    </>\n\t);\n}\n\n\nexport default Rider;\n","/home/sunil/Karyathalo/admin-portal/src/pages/rider/info/AddressInfo.js",["301","302","303","304","305","306","307","308"],"import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label\n  } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState} from 'react';\nimport _ from \"lodash/fp\";\nimport '../rider.scss';\nimport API from '../../../helpers/api';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as alertMessage from '../../../components/alerts/AlertMessages';\n\n\nconst AddRiderAddressSchema = yup.object().shape({\n  address: yup.string().required(),\n  city: yup.string().required(),\n  country: yup.string().required(),\n  state: yup.string()\n    .required()\n    .matches(/^[0-9]+$/)\n    .min(1)\n    .max(2)\n});\n\n  function AddRiderAddress(props){\n    const { register, handleSubmit, watch, errors } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(AddRiderAddressSchema)\n    });\n    const[editMode, setEditMode] = useState(false);\n    const history = useHistory();\n\n    const editHandler = () =>{\n        setEditMode (!editMode);\n    }\n\n    const OnSubmit = async (data)  => {\n        const newData = {...props.rider, address: data}\n        const response = await API(`riders/${props.id}`, 'PUT', newData);\n        props.toggleAlert(\"Riders's Address updated successfully\",alertMessage.SUCCESS);\n        setEditMode(false)\n    }\n\n    useEffect(()=>{\n        console.log(props.rider.address)\n        if(props.rider.address==null){\n            setEditMode(true)\n        }\n        else setEditMode(false)\n    },[props.rider])\n\n    return(\n        <>\n            <Col lg=\"6\">\n                <Card>\n                    <CardHeader>\n                        <h3 className=\"mb-0\">Rider Address</h3>\n                        { props.rider && !editMode ?\n                                <div className=\"\">\n                                  <Button\n                                    onClick={editHandler}\n                                    className=\"btn btn-warning\"\n                                  >\n                                    Edit Address\n                                </Button>\n                            </div>\n                            :null\n                        }\n                    </CardHeader>\n                    <CardBody>\n                        <form onSubmit={handleSubmit(OnSubmit)}>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"address\"\n                                    >\n                                    Address\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"address\"\n                                        className={errors.address?\"is-invalid\":\"\"}\n                                        placeholder=\"Address\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.rider && props.rider.address!=null?props.rider.address.address:null }\n                                        disabled={props.rider?!editMode: editMode}\n                                    />\n                                    {errors.address && <div className=\"invalid-feedback\">{errors.address.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            \n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"city\"\n                                    >\n                                    City\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"city\"\n                                        className={errors.city?\"is-invalid\":\"\"}\n                                        placeholder=\"City\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.rider && props.rider.address!=null?props.rider.address.city:null }\n                                        disabled={props.rider?!editMode: editMode}\n                                    />\n                                    {errors.city && <div className=\"invalid-feedback\">{errors.city.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"state\"\n                                    >\n                                    State\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"state\"\n                                        className={errors.state?\"is-invalid\":\"\"}\n                                        placeholder=\"State\"\n                                        type=\"number\"\n                                        innerRef={register}\n                                        defaultValue ={props.rider && props.rider.address!=null?props.rider.address.state:null }\n                                        disabled={props.rider?!editMode: editMode}\n                                    />\n                                    {errors.state && <div className=\"invalid-feedback\">{errors.state.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup className=\"row\">\n                                <Col md=\"3\">\n                                    <Label\n                                        className=\"form-control-label col-form-label\"\n                                        htmlFor=\"country\"\n                                    >\n                                    Country\n                                    </Label>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Input\n                                        name=\"country\"\n                                        className={errors.country?\"is-invalid\":\"\"}\n                                        placeholder=\"Country\"\n                                        type=\"text\"\n                                        innerRef={register}\n                                        defaultValue ={props.rider && props.rider.address!=null?props.rider.address.country:null }\n                                        disabled={props.rider?!editMode: editMode}\n                                    />\n                                    {errors.country && <div className=\"invalid-feedback\">{errors.country.message}</div>}\n                                </Col>\n                            </FormGroup>\n                            { !props.rider.address ?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Submit</Button>\n                                    </Col>\n                                </Row>:\n                                editMode?\n                                <Row className=\"float-right\">\n                                    <Col>\n                                        <Button type=\"submit\" className=\"btn-info\">Update</Button>\n                                    </Col>\n                                </Row>:null\n                            }\n                        </form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default AddRiderAddress;","/home/sunil/Karyathalo/admin-portal/src/components/Loading.js",[],{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":18,"column":6,"nodeType":"315","endLine":18,"endColumn":8,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":1,"column":26,"nodeType":"319","messageId":"320","endLine":1,"endColumn":30},{"ruleId":"317","severity":1,"message":"321","line":7,"column":8,"nodeType":"319","messageId":"320","endLine":7,"endColumn":17},{"ruleId":"322","severity":1,"message":"323","line":31,"column":20,"nodeType":"324","messageId":"325","endLine":31,"endColumn":37,"fix":"326"},{"ruleId":"313","severity":1,"message":"327","line":27,"column":8,"nodeType":"315","endLine":27,"endColumn":10,"suggestions":"328"},{"ruleId":"317","severity":1,"message":"329","line":3,"column":25,"nodeType":"319","messageId":"320","endLine":3,"endColumn":33},{"ruleId":"317","severity":1,"message":"330","line":12,"column":8,"nodeType":"319","messageId":"320","endLine":12,"endColumn":17},{"ruleId":"317","severity":1,"message":"331","line":20,"column":11,"nodeType":"319","messageId":"320","endLine":20,"endColumn":18},{"ruleId":"317","severity":1,"message":"332","line":7,"column":10,"nodeType":"319","messageId":"320","endLine":7,"endColumn":17},{"ruleId":"317","severity":1,"message":"333","line":8,"column":10,"nodeType":"319","messageId":"320","endLine":8,"endColumn":21},{"ruleId":"317","severity":1,"message":"334","line":8,"column":23,"nodeType":"319","messageId":"320","endLine":8,"endColumn":35},{"ruleId":"317","severity":1,"message":"335","line":8,"column":37,"nodeType":"319","messageId":"320","endLine":8,"endColumn":49},{"ruleId":"317","severity":1,"message":"336","line":9,"column":8,"nodeType":"319","messageId":"320","endLine":9,"endColumn":17},{"ruleId":"317","severity":1,"message":"337","line":16,"column":10,"nodeType":"319","messageId":"320","endLine":16,"endColumn":14},{"ruleId":"317","severity":1,"message":"338","line":16,"column":16,"nodeType":"319","messageId":"320","endLine":16,"endColumn":23},{"ruleId":"317","severity":1,"message":"339","line":41,"column":9,"nodeType":"319","messageId":"320","endLine":41,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":47,"column":44,"nodeType":"342","messageId":"343","endLine":47,"endColumn":46},{"ruleId":"317","severity":1,"message":"344","line":3,"column":8,"nodeType":"319","messageId":"320","endLine":3,"endColumn":14},{"ruleId":"317","severity":1,"message":"345","line":3,"column":10,"nodeType":"319","messageId":"320","endLine":3,"endColumn":29},{"ruleId":"317","severity":1,"message":"346","line":4,"column":22,"nodeType":"319","messageId":"320","endLine":4,"endColumn":44},{"ruleId":"317","severity":1,"message":"347","line":6,"column":51,"nodeType":"319","messageId":"320","endLine":6,"endColumn":75},{"ruleId":"317","severity":1,"message":"348","line":6,"column":91,"nodeType":"319","messageId":"320","endLine":6,"endColumn":115},{"ruleId":"317","severity":1,"message":"349","line":8,"column":8,"nodeType":"319","messageId":"320","endLine":8,"endColumn":13},{"ruleId":"317","severity":1,"message":"350","line":9,"column":10,"nodeType":"319","messageId":"320","endLine":9,"endColumn":20},{"ruleId":"317","severity":1,"message":"337","line":14,"column":15,"nodeType":"319","messageId":"320","endLine":14,"endColumn":19},{"ruleId":"340","severity":1,"message":"341","line":58,"column":74,"nodeType":"342","messageId":"343","endLine":58,"endColumn":76},{"ruleId":"340","severity":1,"message":"341","line":90,"column":74,"nodeType":"342","messageId":"343","endLine":90,"endColumn":76},{"ruleId":"317","severity":1,"message":"336","line":2,"column":8,"nodeType":"319","messageId":"320","endLine":2,"endColumn":17},{"ruleId":"317","severity":1,"message":"351","line":8,"column":9,"nodeType":"319","messageId":"320","endLine":8,"endColumn":20},{"ruleId":"317","severity":1,"message":"352","line":13,"column":5,"nodeType":"319","messageId":"320","endLine":13,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":14,"column":5,"nodeType":"319","messageId":"320","endLine":14,"endColumn":19},{"ruleId":"317","severity":1,"message":"354","line":15,"column":5,"nodeType":"319","messageId":"320","endLine":15,"endColumn":11},{"ruleId":"317","severity":1,"message":"355","line":16,"column":5,"nodeType":"319","messageId":"320","endLine":16,"endColumn":9},{"ruleId":"317","severity":1,"message":"356","line":17,"column":5,"nodeType":"319","messageId":"320","endLine":17,"endColumn":13},{"ruleId":"317","severity":1,"message":"357","line":18,"column":5,"nodeType":"319","messageId":"320","endLine":18,"endColumn":14},{"ruleId":"317","severity":1,"message":"358","line":22,"column":5,"nodeType":"319","messageId":"320","endLine":22,"endColumn":14},{"ruleId":"317","severity":1,"message":"359","line":23,"column":5,"nodeType":"319","messageId":"320","endLine":23,"endColumn":10},{"ruleId":"313","severity":1,"message":"360","line":43,"column":5,"nodeType":"315","endLine":43,"endColumn":7,"suggestions":"361"},{"ruleId":"317","severity":1,"message":"352","line":2,"column":5,"nodeType":"319","messageId":"320","endLine":2,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":3,"column":5,"nodeType":"319","messageId":"320","endLine":3,"endColumn":19},{"ruleId":"317","severity":1,"message":"357","line":8,"column":5,"nodeType":"319","messageId":"320","endLine":8,"endColumn":14},{"ruleId":"317","severity":1,"message":"362","line":9,"column":5,"nodeType":"319","messageId":"320","endLine":9,"endColumn":14},{"ruleId":"317","severity":1,"message":"363","line":19,"column":8,"nodeType":"319","messageId":"320","endLine":19,"endColumn":9},{"ruleId":"317","severity":1,"message":"332","line":21,"column":10,"nodeType":"319","messageId":"320","endLine":21,"endColumn":17},{"ruleId":"317","severity":1,"message":"364","line":40,"column":37,"nodeType":"319","messageId":"320","endLine":40,"endColumn":42},{"ruleId":"317","severity":1,"message":"331","line":45,"column":11,"nodeType":"319","messageId":"320","endLine":45,"endColumn":18},{"ruleId":"317","severity":1,"message":"365","line":53,"column":15,"nodeType":"319","messageId":"320","endLine":53,"endColumn":23},{"ruleId":"317","severity":1,"message":"352","line":2,"column":5,"nodeType":"319","messageId":"320","endLine":2,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":3,"column":5,"nodeType":"319","messageId":"320","endLine":3,"endColumn":19},{"ruleId":"317","severity":1,"message":"357","line":8,"column":5,"nodeType":"319","messageId":"320","endLine":8,"endColumn":14},{"ruleId":"317","severity":1,"message":"362","line":9,"column":5,"nodeType":"319","messageId":"320","endLine":9,"endColumn":14},{"ruleId":"317","severity":1,"message":"366","line":18,"column":17,"nodeType":"319","messageId":"320","endLine":18,"endColumn":26},{"ruleId":"317","severity":1,"message":"363","line":19,"column":8,"nodeType":"319","messageId":"320","endLine":19,"endColumn":9},{"ruleId":"317","severity":1,"message":"364","line":41,"column":37,"nodeType":"319","messageId":"320","endLine":41,"endColumn":42},{"ruleId":"317","severity":1,"message":"331","line":45,"column":11,"nodeType":"319","messageId":"320","endLine":45,"endColumn":18},{"ruleId":"367","severity":1,"message":"368","line":51,"column":9,"nodeType":"369","messageId":"370","endLine":51,"endColumn":104},{"ruleId":"367","severity":1,"message":"368","line":53,"column":9,"nodeType":"369","messageId":"370","endLine":58,"endColumn":10},{"ruleId":"317","severity":1,"message":"352","line":2,"column":5,"nodeType":"319","messageId":"320","endLine":2,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":3,"column":5,"nodeType":"319","messageId":"320","endLine":3,"endColumn":19},{"ruleId":"317","severity":1,"message":"357","line":8,"column":5,"nodeType":"319","messageId":"320","endLine":8,"endColumn":14},{"ruleId":"317","severity":1,"message":"362","line":9,"column":5,"nodeType":"319","messageId":"320","endLine":9,"endColumn":14},{"ruleId":"317","severity":1,"message":"363","line":19,"column":8,"nodeType":"319","messageId":"320","endLine":19,"endColumn":9},{"ruleId":"317","severity":1,"message":"332","line":21,"column":10,"nodeType":"319","messageId":"320","endLine":21,"endColumn":17},{"ruleId":"317","severity":1,"message":"364","line":37,"column":37,"nodeType":"319","messageId":"320","endLine":37,"endColumn":42},{"ruleId":"317","severity":1,"message":"331","line":42,"column":11,"nodeType":"319","messageId":"320","endLine":42,"endColumn":18},{"ruleId":"317","severity":1,"message":"365","line":50,"column":15,"nodeType":"319","messageId":"320","endLine":50,"endColumn":23},{"ruleId":"317","severity":1,"message":"352","line":2,"column":5,"nodeType":"319","messageId":"320","endLine":2,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":3,"column":5,"nodeType":"319","messageId":"320","endLine":3,"endColumn":19},{"ruleId":"317","severity":1,"message":"357","line":8,"column":5,"nodeType":"319","messageId":"320","endLine":8,"endColumn":14},{"ruleId":"317","severity":1,"message":"362","line":9,"column":5,"nodeType":"319","messageId":"320","endLine":9,"endColumn":14},{"ruleId":"317","severity":1,"message":"363","line":19,"column":8,"nodeType":"319","messageId":"320","endLine":19,"endColumn":9},{"ruleId":"317","severity":1,"message":"332","line":21,"column":10,"nodeType":"319","messageId":"320","endLine":21,"endColumn":17},{"ruleId":"317","severity":1,"message":"364","line":33,"column":37,"nodeType":"319","messageId":"320","endLine":33,"endColumn":42},{"ruleId":"317","severity":1,"message":"352","line":2,"column":5,"nodeType":"319","messageId":"320","endLine":2,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":3,"column":5,"nodeType":"319","messageId":"320","endLine":3,"endColumn":19},{"ruleId":"317","severity":1,"message":"357","line":8,"column":5,"nodeType":"319","messageId":"320","endLine":8,"endColumn":14},{"ruleId":"317","severity":1,"message":"362","line":9,"column":5,"nodeType":"319","messageId":"320","endLine":9,"endColumn":14},{"ruleId":"317","severity":1,"message":"363","line":19,"column":8,"nodeType":"319","messageId":"320","endLine":19,"endColumn":9},{"ruleId":"317","severity":1,"message":"332","line":21,"column":10,"nodeType":"319","messageId":"320","endLine":21,"endColumn":17},{"ruleId":"317","severity":1,"message":"364","line":33,"column":37,"nodeType":"319","messageId":"320","endLine":33,"endColumn":42},{"ruleId":"317","severity":1,"message":"331","line":37,"column":11,"nodeType":"319","messageId":"320","endLine":37,"endColumn":18},{"ruleId":"317","severity":1,"message":"365","line":45,"column":15,"nodeType":"319","messageId":"320","endLine":45,"endColumn":23},{"ruleId":"317","severity":1,"message":"371","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"372","line":2,"column":17,"nodeType":"319","messageId":"320","endLine":2,"endColumn":24},{"ruleId":"317","severity":1,"message":"373","line":8,"column":10,"nodeType":"319","messageId":"320","endLine":8,"endColumn":20},{"ruleId":"317","severity":1,"message":"332","line":7,"column":10,"nodeType":"319","messageId":"320","endLine":7,"endColumn":17},{"ruleId":"317","severity":1,"message":"333","line":8,"column":10,"nodeType":"319","messageId":"320","endLine":8,"endColumn":21},{"ruleId":"317","severity":1,"message":"334","line":8,"column":23,"nodeType":"319","messageId":"320","endLine":8,"endColumn":35},{"ruleId":"317","severity":1,"message":"335","line":8,"column":37,"nodeType":"319","messageId":"320","endLine":8,"endColumn":49},{"ruleId":"317","severity":1,"message":"337","line":14,"column":10,"nodeType":"319","messageId":"320","endLine":14,"endColumn":14},{"ruleId":"317","severity":1,"message":"338","line":14,"column":16,"nodeType":"319","messageId":"320","endLine":14,"endColumn":23},{"ruleId":"317","severity":1,"message":"339","line":37,"column":9,"nodeType":"319","messageId":"320","endLine":37,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":43,"column":42,"nodeType":"342","messageId":"343","endLine":43,"endColumn":44},{"ruleId":"317","severity":1,"message":"352","line":2,"column":5,"nodeType":"319","messageId":"320","endLine":2,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":3,"column":5,"nodeType":"319","messageId":"320","endLine":3,"endColumn":19},{"ruleId":"317","severity":1,"message":"357","line":8,"column":5,"nodeType":"319","messageId":"320","endLine":8,"endColumn":14},{"ruleId":"317","severity":1,"message":"362","line":9,"column":5,"nodeType":"319","messageId":"320","endLine":9,"endColumn":14},{"ruleId":"317","severity":1,"message":"366","line":18,"column":17,"nodeType":"319","messageId":"320","endLine":18,"endColumn":26},{"ruleId":"317","severity":1,"message":"363","line":19,"column":8,"nodeType":"319","messageId":"320","endLine":19,"endColumn":9},{"ruleId":"317","severity":1,"message":"364","line":41,"column":37,"nodeType":"319","messageId":"320","endLine":41,"endColumn":42},{"ruleId":"317","severity":1,"message":"331","line":45,"column":11,"nodeType":"319","messageId":"320","endLine":45,"endColumn":18},{"ruleId":"367","severity":1,"message":"368","line":51,"column":9,"nodeType":"369","messageId":"370","endLine":51,"endColumn":102},{"ruleId":"367","severity":1,"message":"368","line":53,"column":9,"nodeType":"369","messageId":"370","endLine":58,"endColumn":10},{"ruleId":"317","severity":1,"message":"351","line":4,"column":9,"nodeType":"319","messageId":"320","endLine":4,"endColumn":20},{"ruleId":"317","severity":1,"message":"352","line":9,"column":5,"nodeType":"319","messageId":"320","endLine":9,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":10,"column":5,"nodeType":"319","messageId":"320","endLine":10,"endColumn":19},{"ruleId":"317","severity":1,"message":"354","line":11,"column":5,"nodeType":"319","messageId":"320","endLine":11,"endColumn":11},{"ruleId":"317","severity":1,"message":"355","line":12,"column":5,"nodeType":"319","messageId":"320","endLine":12,"endColumn":9},{"ruleId":"317","severity":1,"message":"356","line":13,"column":5,"nodeType":"319","messageId":"320","endLine":13,"endColumn":13},{"ruleId":"317","severity":1,"message":"357","line":14,"column":5,"nodeType":"319","messageId":"320","endLine":14,"endColumn":14},{"ruleId":"317","severity":1,"message":"374","line":17,"column":5,"nodeType":"319","messageId":"320","endLine":17,"endColumn":8},{"ruleId":"317","severity":1,"message":"358","line":18,"column":5,"nodeType":"319","messageId":"320","endLine":18,"endColumn":14},{"ruleId":"317","severity":1,"message":"359","line":19,"column":5,"nodeType":"319","messageId":"320","endLine":19,"endColumn":10},{"ruleId":"313","severity":1,"message":"360","line":39,"column":5,"nodeType":"315","endLine":39,"endColumn":7,"suggestions":"375"},{"ruleId":"317","severity":1,"message":"352","line":2,"column":5,"nodeType":"319","messageId":"320","endLine":2,"endColumn":15},{"ruleId":"317","severity":1,"message":"353","line":3,"column":5,"nodeType":"319","messageId":"320","endLine":3,"endColumn":19},{"ruleId":"317","severity":1,"message":"357","line":8,"column":5,"nodeType":"319","messageId":"320","endLine":8,"endColumn":14},{"ruleId":"317","severity":1,"message":"362","line":9,"column":5,"nodeType":"319","messageId":"320","endLine":9,"endColumn":14},{"ruleId":"317","severity":1,"message":"363","line":19,"column":8,"nodeType":"319","messageId":"320","endLine":19,"endColumn":9},{"ruleId":"317","severity":1,"message":"364","line":39,"column":37,"nodeType":"319","messageId":"320","endLine":39,"endColumn":42},{"ruleId":"317","severity":1,"message":"331","line":44,"column":11,"nodeType":"319","messageId":"320","endLine":44,"endColumn":18},{"ruleId":"317","severity":1,"message":"365","line":52,"column":15,"nodeType":"319","messageId":"320","endLine":52,"endColumn":23},"no-native-reassign",["376"],"no-negated-in-lhs",["377"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["378"],"no-unused-vars","'call' is defined but never used.","Identifier","unusedVar","'loginData' is defined but never used.","no-useless-rename","Destructuring assignment history unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"379","text":"380"},"React Hook useEffect has a missing dependency: 'setCollapseState'. Either include it or remove the dependency array.",["381"],"'Redirect' is defined but never used.","'RiderList' is defined but never used.","'history' is assigned a value but never used.","'connect' is defined but never used.","'fetchDriver' is defined but never used.","'deleteDriver' is defined but never used.","'updateDriver' is defined but never used.","'AddDriver' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'handleClose' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'driver' is defined but never used.","'addDriverSuccessful' is defined but never used.","'updateDriverSuccessful' is defined but never used.","'DELETE_DRIVER_SUCCESSFUL' is defined but never used.","'UPDATE_DRIVER_SUCCESSFUL' is defined but never used.","'axios' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["382"],"'Container' is defined but never used.","'_' is defined but never used.","'watch' is assigned a value but never used.","'response' is assigned a value but never used.","'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","'Spinner' is defined but never used.","'percentage' is assigned a value but never used.","'Col' is defined but never used.",["383"],"no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},[772,789],"history",{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"388","fix":"390"},"Update the dependencies array to be: [props]",{"range":"391","text":"392"},"Update the dependencies array to be: [setCollapseState]",{"range":"393","text":"394"},"Update the dependencies array to be: [params.id]",{"range":"395","text":"396"},{"range":"397","text":"396"},[497,499],"[props]",[603,605],"[setCollapseState]",[1030,1032],"[params.id]",[862,864]]